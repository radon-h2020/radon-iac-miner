[{"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "edda2d9a987e00954031c7433bf5608b685fcc57", "filename": "roles/ferm/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "---\nferm_enabled: true\nferm_limit_portscans: false\n\nferm_default_policy_input: DROP\nferm_default_policy_output: ACCEPT\nferm_default_policy_forward: DROP\n\nferm_input_list: []\nferm_input_group_list: []\nferm_input_host_list: []\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "3d5e9fd541fd704e218f51772147ef871f31683b", "filename": "tasks/ssh_cluster_config.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Create SSH directory for root\n  file:\n    path: /root/.ssh/\n    state: directory\n    mode: 0700\n\n- name: Create root SSH key pair for PVE\n  user:\n    name: root\n    generate_ssh_key: yes\n    ssh_key_file: /root/.ssh/id_rsa\n    ssh_key_type: rsa\n    ssh_key_comment: \"root@{{ inventory_hostname_short }}\"\n\n- name: Fetch root SSH public key\n  fetch:\n    src: /root/.ssh/id_rsa.pub\n    dest: \"{{ pve_fetch_directory }}/{{ inventory_hostname }}/root_rsa.pub\"\n    fail_on_missing: yes\n    flat: yes\n\n- name: Authorize all hosts' root SSH public keys\n  authorized_key:\n    user: root\n    key: \"{{ lookup('file', pve_fetch_directory + '/' + item + '/root_rsa.pub') }}\"\n  with_items: \"{{ groups[pve_group] }}\"\n\n- name: Configure SSH clients for connecting to PVE cluster hosts\n  blockinfile:\n    dest: /etc/ssh/ssh_config\n    create: yes\n    marker: \"# {mark}: PVE host configuration options (managed by ansible).\"\n    content: |\n      {% for host in groups[pve_group] %}\n      Host {{ hostvars[host].ansible_fqdn }} {{ hostvars[host].ansible_hostname }} {{ hostvars[host].ansible_default_ipv4.address }}\n          IdentityFile /root/.ssh/id_rsa\n      {% endfor %}\n\n- name: Allow root logins from PVE cluster hosts\n  blockinfile:\n    dest: /etc/ssh/sshd_config\n    marker: \"# {mark}: Allow root logins from PVE hosts (managed by ansible).\"\n    content: |\n      {% for host in groups[pve_group] %}\n      Match Address {{ hostvars[host].ansible_default_ipv4.address }}\n      PermitRootLogin {{ pve_sshd_prohibit_password }}\n      {% endfor %}\n    validate: \"/usr/sbin/sshd -t -f %s\"\n  notify:\n    - reload sshd configuration\n\n- name: Fetch SSH public host keys\n  fetch:\n    src: \"/etc/ssh/{{ item }}\"\n    dest: \"{{ pve_fetch_directory }}/{{ inventory_hostname }}/{{ item }}\"\n    flat: yes\n  with_items:\n    - ssh_host_rsa_key.pub\n    - ssh_host_ed25519_key.pub\n    - ssh_host_ecdsa_key.pub\n\n- name: Check status of known hosts file\n  stat:\n    path: /etc/ssh/ssh_known_hosts\n  register: __pve_known_hosts_file\n\n- name: Add every host's host keys to global known_hosts\n  blockinfile:\n    dest: /etc/ssh/ssh_known_hosts\n    create: yes\n    marker: \"# {mark}: PVE host keys (managed by ansible).\"\n    content: |\n      {% for host in groups[pve_group] %}\n      {% for keytype in ['rsa', 'ed25519', 'ecdsa'] %}\n      {{ hostvars[host].ansible_fqdn }},{{ hostvars[host].ansible_hostname }},{{ hostvars[host].ansible_default_ipv4.address }} {{ ' '.join(lookup('file', pve_fetch_directory + '/' + host + '/ssh_host_' + keytype + '_key.pub').split()[:-1]) }}\n      {% endfor %}\n      {% endfor %}\n  when:\n    - \"not (__pve_known_hosts_file.stat.islnk is defined and __pve_known_hosts_file.stat.islnk)\"\n\n- name: Add PVE-provided ciphers to SSH client config\n  lineinfile:\n    line: \"Ciphers {{ pve_ssh_ciphers }}\"\n    regexp: \"^Ciphers .*\"\n    insertbefore: BOF\n    create: yes\n    dest: /root/.ssh/config\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "38f20d9974bcc1e794ab1c6599dd70f786c8a5b8", "filename": "roles/deploy/tasks/build.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: \"{{ deploy_build_before | default('../hooks/example.yml') }}\"\n  tags: deploy-build-before\n\n- name: Copy project templates\n  template:\n    src: \"{{ item.src }}\"\n    dest: \"{{ deploy_helper.new_release_path }}/{{ item.dest }}\"\n    mode: \"{{ item.mode | default('0644') }}\"\n  with_items: \"{{ project_templates }}\"\n\n- name: Check if project folders exist\n  stat:\n    path: \"{{ deploy_helper.current_path }}/{{ item }}\"\n  register: project_folder_paths\n  with_items: \"{{ project_copy_folders }}\"\n\n- name: Copy project folders\n  command: cp -rp {{ deploy_helper.current_path }}/{{ item.item }} {{ deploy_helper.new_release_path }}\n  with_items: \"{{ project_folder_paths.results }}\"\n  when: item.stat.exists\n\n- include: \"{{ deploy_build_after | default('../hooks/example.yml') }}\"\n  tags: deploy-build-after\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "965405720ca148dbcbb50fa925a241167ec593f8", "filename": "roles/rollback/tasks/user-release.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Check whether user-specified release exists\n  stat:\n    path: \"{{ project_root }}/releases/{{ release }}\"\n  register: specified\n\n- name: Get name of current symlinked release\n  shell: \"basename $(readlink current)\"\n  args:\n    chdir: \"{{ project_root }}\"\n  register: current_release\n\n- name: Fail if user-specified release doesn't exist or is already active\n  fail:\n    msg: \"Cannot switch to release {{ release }}. Either it does not exist or it is the active release.\"\n  when: specified.stat.isdir | default(False) == False or current_release.stdout_lines[0] == release\n\n- name: Create new_release_path variable\n  set_fact:\n    new_release_path: \"{{ project_root }}/releases/{{ release }}\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "68da533c8ba11eeac8d041cdac5d8ff4c1d2a94e", "filename": "roles/mariadb/templates/my.cnf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n[client]\nuser=root\npassword=\"{{ mysql_root_password }}\"\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "645d83c9bbfccc0c2f7917f8136ec343ca2d4ca5", "filename": "tasks/configure-systemd.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "- name: Combine all systemd service configuration options\n  set_fact:\n    _systemd_service_config: \"{{ docker_systemd_service_config_tweaks + docker_systemd_service_config }}\"\n\n- name: Ensure /etc/systemd/system/docker.service.d directory exists\n  file:\n    path: /etc/systemd/system/docker.service.d\n    state: directory\n    mode: 0755\n  become: yes\n\n- name: Setup default Docker drop-in to enable use of environment file\n  template:\n    src: drop-ins/default.conf.j2\n    dest: /etc/systemd/system/docker.service.d/default.conf\n  become: yes\n  notify: restart docker\n  register: _systemd_docker_dropin\n  vars:\n    systemd_envs_dir: \"{{ docker_envs_dir[_docker_os_dist] }}\"\n    systemd_service_conf: \"{{ _systemd_service_config }}\"\n\n- name: Combine Docker daemon environment variable configuration\n  set_fact:\n    docker_service_envs: \"{{ docker_service_envs | combine(_docker_service_opts) | combine(docker_daemon_envs) }}\"\n  vars:\n    _docker_service_opts:\n      DOCKER_OPTS: \"{{ docker_daemon_opts }}\"\n\n- name: Setup Docker environment file {{ docker_envs_dir[_docker_os_dist] }}/docker-envs\n  template:\n    src: docker-envs.j2\n    dest: \"{{ docker_envs_dir[_docker_os_dist] }}/docker-envs\"\n  become: yes\n  notify: restart docker\n  vars:\n    docker_envs: \"{{ docker_service_envs }}\"\n\n- name: Force daemon reload of systemd\n  systemd:\n    daemon_reload: yes\n  become: yes\n  notify: restart docker\n  when: _systemd_docker_dropin|changed"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "ce9db3170bff44226c607a8cbb16119754c38867", "filename": "roles/sshd/LICENSE", "repository": "roots/trellis", "decoded_content": "The MIT License (MIT)\n\nCopyright (c) 2014 Nick Janetakis nick.janetakis@gmail.com\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "6be3b71bddeb9f2cc485f2cdcf2d44741a83f53e", "filename": "roles/deploy/hooks/finalize-after.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: WordPress Installed?\n  command: wp core is-installed {{ project.multisite.enabled | default(false) | ternary('--network', '') }}\n  args:\n    chdir: \"{{ deploy_helper.new_release_path }}\"\n  register: wp_installed\n  changed_when: false\n  failed_when: wp_installed.stderr != \"\"\n\n- name: Update WP theme paths\n  command: wp eval 'wp_clean_themes_cache(); switch_theme(get_stylesheet());'\n  args:\n    chdir: \"{{ deploy_helper.new_release_path }}\"\n  when: wp_installed | success\n\n- name: Update WP database\n  command: wp core update-db\n  args:\n    chdir: \"{{ deploy_helper.new_release_path }}\"\n  when: wp_installed | success and not project.multisite.enabled | default(false)\n\n- name: Warn about updating network database.\n  debug:\n    msg: \"Updating the network database could take a long time with a large number of sites.\"\n  when: wp_installed | success and project.multisite.enabled | default(false)\n\n- name: Update WP network database\n  command: wp core update-db --network\n  args:\n    chdir: \"{{ deploy_helper.new_release_path }}\"\n  when: wp_installed | success and project.multisite.enabled | default(false)\n\n- name: Reload php-fpm\n  shell: sudo service php7.0-fpm reload\n  args:\n    chdir: \"{{ deploy_helper.new_release_path }}\"\n    warn: false\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "da7a992c696976ab1aba7de65abc2f5b80246288", "filename": "roles/users/templates/sudoers.d.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n{% for service in web_sudoers %}\n{{ web_user }} ALL=(root) NOPASSWD: {{ service }}\n{% endfor %}\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "e57d6aa9c4e11f8e351560b8381ea87594a25415", "filename": "tasks/System-Win32NT.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: 'Fetch oracle artifact with {{ transport }} transport'\n  include_tasks: '{{ transport_driver }}'\n  with_first_found:\n    - 'win_fetch/{{ transport }}.yml'\n    - fetch/unknown-transport.yml\n  loop_control:\n    loop_var: transport_driver\n\n- name: Set java full version\n  set_fact:\n    java_full_version: '{{ java_major_version }}.{{ java_minor_version }}'\n\n- name: 'Perform {{ java_binary_type }} install'\n  include_tasks: 'Windows/{{ java_binary_type }}.yml'\n\n- name: Find java_folder\n  win_find:\n    paths: '{{ java_path }}'\n    recurse: False\n    file_type: directory\n    patterns: '{{ java_folder }}'\n    use_regex: True\n  register: java_dir\n\n- name: Set actual java directory\n  set_fact:\n    java_act_path: \"{{ java_dir.files | map(attribute='path') | list | last }}\"\n\n- name: Set java environment variable\n  win_environment:\n    name: JAVA_HOME\n    state: present\n    value: '{{ java_act_path }}'\n    level: machine\n\n- name: Ensure that 'JAVA_HOME\\bin' present in 'Path' variable\n  win_path:\n    elements: '{{ java_act_path }}\\bin'\n    state: present\n    scope: machine\n\n- name: 'Fetch oracle security policy with {{ java_unlimited_policy_transport }} transport'\n  include_tasks: '{{ transport_driver }}'\n  with_first_found:\n    - 'win_fetch/security-winfetch-{{ java_unlimited_policy_transport }}.yml'\n    - fetch/unknown-transport.yml\n  loop_control:\n    loop_var: transport_driver\n  when:\n    - java_unlimited_policy_enabled\n    - java_full_version is version('8.151', '<')\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "55354b1042cb41f1b6debc75e9dafbcc2f8e0a08", "filename": "roles/letsencrypt/README.md", "repository": "roots/trellis", "decoded_content": "# Let\u2019s encrypt/acme-tiny role for Ansible\n\n## License\n\nMIT\n\n## Author Information\n\nThis role was created by Andreas Wolf. Visit my [website](http://a-w.io) and [Github profile](https://github.com/andreaswolf/) or follow me on [Twitter](https://twitter.com/andreaswo).\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "af1c29d2adf69a369819fe7abdc4ae3e73d91b01", "filename": "tasks/identify_needed_packages.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Stage packages needed for base PVE installation\n  set_fact:\n    __pve_install_packages:\n      - proxmox-ve\n      - postfix\n      - open-iscsi\n      - ksm-control-daemon\n      - systemd-sysv\n\n- name: Stage patch package if we need to patch the subscription message\n  set_fact:\n    __pve_install_packages: \"{{ __pve_install_packages | union(['patch']) }}\"\n  when: \"'pve-no-subscription' in pve_repository_line\"\n\n- name: Stage ZFS packages if ZFS is enabled\n  set_fact:\n    __pve_install_packages: \"{{ __pve_install_packages | union(['zfsutils-linux', 'zfs-initramfs', 'zfs-zed']) }}\"\n  when: pve_zfs_enabled\n\n- name: Stage any extra packages the user has specified\n  set_fact:\n    __pve_install_packages: \"{{ __pve_install_packages | union(pve_extra_packages) }}\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "6bd95bfdbaae9030c8c19b8cc4eed1151cb1a6ed", "filename": "roles/wordpress-install/templates/env.j2", "repository": "roots/trellis", "decoded_content": "{{ site_env | to_env }}\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "557fa489e07aba0d612092823e976b42fe97bfef", "filename": "tasks/win_fetch/chocolatey.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Set java_binary_type = chocolatey\n  set_fact:\n    java_binary_type: chocolatey\n\n- name: Chocolatey will download artifact itself\n  debug:\n    msg: 'Chocolatey will download artifact itself'\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "5046dc11257e6e710565aa2ca3e03ec66865a0f8", "filename": "tasks/distribution-checks.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Fail if unsupported CentOS/RedHat version\n  fail:\n    msg: \"CentOS/RedHat 7 or later is required!\"\n  when: (_docker_os_dist == \"CentOS\" or _docker_os_dist == \"RedHat\") and\n        _docker_os_dist_major_version < '7'\n\n- name: Fail if unsupported Fedora version\n  fail:\n    msg: \"Fedora 24 or later is required!\"\n  when: _docker_os_dist == \"Fedora\" and\n        _docker_os_dist_major_version < '24'\n\n- name: Fail if unsupported Ubuntu version\n  fail:\n    msg: \"Ubuntu 14 or later is required!\"\n  when: _docker_os_dist == \"Ubuntu\" and\n        _docker_os_dist_major_version < '14'\n\n- name: Fail if unsupported Debian version\n  fail:\n    msg: \"Debian 8 (jessie) or later is required!\"\n  when: _docker_os_dist == \"Debian\" and\n        _docker_os_dist_major_version < '8'\n\n- name: Fail if this roles does not support the distribution\n  fail:\n    msg: \"Distribution {{ _docker_os_dist }} is not supported by this role!\"\n  when: _docker_os_dist != \"Fedora\" and\n        _docker_os_dist != \"CentOS\" and\n        _docker_os_dist != \"RedHat\" and\n        _docker_os_dist != \"Ubuntu\" and\n        _docker_os_dist != \"Debian\"\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "dc38837d3ca1f6bae9a2b0fd2f2a7bb2dc2b0722", "filename": "tasks/disable_nmi_watchdog.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Unload nmi_watchdog\n  modprobe:\n    name: nmi_watchdog\n    state: absent\n\n- name: Attempt to unload softdog live\n  modprobe:\n    name: softdog\n    state: absent\n  ignore_errors: true\n  register: __pve_rmmod_softdog\n\n- block:\n\n  - name: Stop watchdog-mux\n    service:\n      name: watchdog-mux\n      state: stopped\n    notify:\n      - restart watchdog-mux\n\n  - name: Unload softdog\n    modprobe:\n      name: softdog\n      state: absent\n\n  when: __pve_rmmod_softdog|failed\n\n- name: Disable nmi_watchdog via GRUB config\n  lineinfile:\n    dest: /etc/default/grub\n    line: 'GRUB_CMDLINE_LINUX=\"$GRUB_CMDLINE_LINUX nmi_watchdog=0\"'\n    insertafter: '^GRUB_CMDLINE_LINUX=\"'\n  register: __pve_grub\n\n- name: Update GRUB configuration\n  command: update-grub\n  register: __pve_grub_update\n  failed_when: ('error' in __pve_grub_update.stderr)\n  when: __pve_grub|changed\n  tags: skiponlxc\n"}, {"commit_sha": "00104851b3724644a0cbef4ad8eb6333c90740e2", "sha": "78df75a755b0786116b740fcbd8d948743fd31bc", "filename": "tasks/main.yml", "repository": "jdauphant/ansible-role-ssl-certs", "decoded_content": "---\n  - name: Ensure OpenSSL is installed\n    package: name=openssl state=present\n    tags: [ssl-certs,packages]\n\n  - name: Ensure ssl folder exist\n    file:\n      path: \"{{ ssl_certs_path }}\"\n      state: directory\n      owner: \"{{ ssl_certs_path_owner }}\"\n      group: \"{{ ssl_certs_path_group }}\"\n      mode: \"{{ ssl_certs_mode }}\"\n    tags: [ssl-certs,configuration]\n\n  - local_action: stat path={{ ssl_certs_local_privkey_path }}\n    register: stat_privkey\n    become: no\n    tags: [ssl-certs,configuration]\n\n  - local_action: stat path={{ ssl_certs_local_cert_path }}\n    register: stat_cert\n    become: no\n    tags: [ssl-certs,configuration]\n\n  - name: Test if privkey file is needed\n    fail: msg=\"Privkey file {{ ssl_certs_local_privkey_path }} is missing\"\n    when: not stat_privkey.stat.exists and stat_cert.stat.exists\n    tags: [ssl-certs,configuration]\n\n  - name: Test if cert file is needed\n    fail: msg=\"Cert file {{ ssl_certs_local_cert_path }} is missing\"\n    when: stat_privkey.stat.exists and not stat_cert.stat.exists\n    tags: [ssl-certs,configuration]\n\n  - include: generate.yml\n    when: >\n      ( not stat_privkey.stat.exists and not stat_cert.stat.exists )\n      and ( ssl_certs_local_privkey_data == '' and ssl_certs_local_cert_data == '' )\n    tags: [ssl-certs,configuration]\n\n  - name: Copy SSL certificates\n    copy:\n      src: \"{{ item.src }}\"\n      dest: \"{{ item.dest }}\"\n      owner: \"{{ ssl_certs_path_owner }}\"\n      group: \"{{ ssl_certs_path_group }}\"\n      mode: \"{{ ssl_certs_mode }}\"\n    when: >\n      ( stat_privkey.stat.exists and stat_cert.stat.exists )\n      and ( ssl_certs_local_privkey_data == '' and ssl_certs_local_cert_data == '' )\n    with_items:\n      - { src: \"{{ ssl_certs_local_cert_path }}\", dest: \"{{ ssl_certs_cert_path }}\" }\n      - { src: \"{{ ssl_certs_local_privkey_path }}\", dest: \"{{ ssl_certs_privkey_path }}\" }\n    tags: [ssl-certs,configuration]\n\n  - name: Copy SSL certificate data\n    copy:\n      content: \"{{ item.content }}\"\n      dest: \"{{ item.dest }}\"\n      owner: \"{{ ssl_certs_path_owner }}\"\n      group: \"{{ ssl_certs_path_group }}\"\n      mode: \"{{ ssl_certs_mode }}\"\n    when: ssl_certs_local_privkey_data != ''\n          and ssl_certs_local_cert_data != ''\n    with_items:\n      - { content: \"{{ ssl_certs_local_cert_data|default }}\", dest: \"{{ ssl_certs_cert_path }}\" }\n      - { content: \"{{ ssl_certs_local_privkey_data|default }}\", dest: \"{{ ssl_certs_privkey_path }}\" }\n    no_log: true\n    tags: [ssl-certs,configuration]\n\n  - name: Generate strong DHE parameter - https://weakdh.org/\n    command: openssl dhparam -out {{ssl_certs_dhparam_path}} {{ssl_certs_dhparam_size}} creates={{ssl_certs_dhparam_path}}\n    when: ssl_certs_generate_dh_param\n    tags: [ssl-certs,configuration]\n\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "2c50b9b18f5afea4b708082203ad6c0dd0312fd7", "filename": "roles/ferm/templates/etc/ferm/filter-input.d/dport_limit.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n# manual customization of this file is not recommended\n\n{% if item.disabled is undefined or (item.disabled is defined and not item.disabled) or (item.disabled is defined and item.disabled == 'false') %}\nprotocol {{ item.protocol | default('tcp syn') }} dport ({{ item.dport | join(' ') }}) {\n\n  @subchain \"dport-limit-{{ item.dport[0] }}\" {\n    mod recent name {{ item.dport[0] | upper }} {\n      set NOP;\n      update seconds {{ item.seconds | default('300') }} hitcount {{ item.hits | default('5') }} @subchain \"dport-log-{{ item.dport[0] }}\" {\n        mod recent set name \"badguys\" {\n          mod limit limit 3/hour limit-burst 5 {\n            LOG log-prefix \"iptables-blocked-{{ item.dport[0] }}: \" log-level warning;\n          }\n          DROP;\n        }\n      }\n    }\n  }\n\n  ACCEPT;\n}\n{% else %}\n# dport_limit rule has been disabled by item.disabled variable\n{% endif %}"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b04a143ca4747648ae1795a909c716a32e693a04", "filename": "roles/sshd/handlers/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: restart ssh\n  service: name=ssh state=restarted"}, {"commit_sha": "00104851b3724644a0cbef4ad8eb6333c90740e2", "sha": "5af4b1704791190712d474dc300ad2b7a1d00f9c", "filename": "meta/main.yml", "repository": "jdauphant/ansible-role-ssl-certs", "decoded_content": "---\ngalaxy_info:\n  author: \"Julien DAUPHANT\"\n  license: BSD\n  min_ansible_version: 1.9\n  #\n  # Below are all platforms currently available. Just uncomment\n  # the ones that apply to your role. If you don't see your\n  # platform on this list, let us know and we'll get it added!\n  #\n  platforms:\n  #- name: EL\n  # versions:\n  #  - all\n  #  - 5\n  # - 6\n  #- name: GenericUNIX\n  #  versions:\n  #  - all\n  #  - any\n  #- name: Fedora\n  #  versions:\n  #  - all\n  #  - 16\n  #  - 17\n  #  - 18\n  #  - 19\n  #  - 20\n  #- name: opensuse\n  #  versions:\n  #  - all\n  #  - 12.1\n  #  - 12.2\n  #  - 12.3\n  #  - 13.1\n  #  - 13.2\n   - name: GenericBSD\n     versions:\n     - all\n  #  - any\n  #- name: FreeBSD\n  #  versions:\n  #  - all\n  #  - 8.0\n  #  - 8.1\n  #  - 8.2\n  #  - 8.3\n  #  - 8.4\n  #  - 9.0\n  #  - 9.1\n  #  - 9.1\n  #  - 9.2\n  #- name: Ubuntu\n  #  versions:\n  #  - all\n  #  - lucid\n  #  - maverick\n  #  - natty\n  #  - oneiric\n  #  - precise\n  #  - quantal\n  #  - raring\n  #  - saucy\n  #  - trusty\n  #- name: SLES\n  #  versions:\n  #  - all\n  #  - 10SP3\n  #  - 10SP4\n  #  - 11\n  #  - 11SP1\n  #  - 11SP2\n  #  - 11SP3\n   - name: GenericLinux\n     versions:\n     - all\n  #  - any\n  #- name: Debian\n  #  versions:\n  #  - all\n  #  - etch\n  #  - lenny\n  #  - squeeze\n  #  - wheezy\n  #\n  # Below are all categories currently available. Just as with\n  # the platforms above, uncomment those that apply to your role.\n  #\n  categories:\n  #- cloud\n  #- cloud:ec2\n  #- cloud:gce\n  #- cloud:rax\n  #- database\n  #- database:nosql\n  #- database:sql\n  #- development\n  #- monitoring\n  #- networking\n  #- packaging\n  #- system\n   - web\ndependencies: []\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b3a2b6f2add91e9a2b3e89725703555ecb24dfaa", "filename": "roles/fail2ban/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "---\nfail2ban_loglevel: 3\nfail2ban_logtarget: /var/log/fail2ban.log\nfail2ban_socket: /var/run/fail2ban/fail2ban.sock\n\nfail2ban_ignoreip: 127.0.0.1/8 {{ ip_whitelist | join(' ') }}\nfail2ban_bantime: 600\nfail2ban_maxretry: 6\n\nfail2ban_backend: polling\n\nfail2ban_destemail: root@localhost\nfail2ban_banaction: iptables-multiport\nfail2ban_mta: sendmail\nfail2ban_protocol: tcp\nfail2ban_chain: INPUT\n\nfail2ban_action: action_\n\nfail2ban_services:\n  - name: ssh\n    port: ssh\n    filter: sshd\n    logpath: /var/log/auth.log\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "ff77850b5bcef0569f3a3eaf3b211152ddd0d7b3", "filename": "tasks/ipmi_watchdog.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- include: disable_nmi_watchdog.yml\n\n- name: Load ipmi_watchdog module\n  modprobe:\n    name: ipmi_watchdog\n    params: \"action={{ pve_watchdog_ipmi_action }} timeout={{ pve_watchdog_ipmi_timeout }} panic_wdt_timeout=10\"\n    state: present\n  tags: skiponlxc\n\n- name: Configure ipmi_watchdog module to load on boot\n  copy:\n    content: \"options ipmi_watchdog action={{ pve_watchdog_ipmi_action }} timeout={{ pve_watchdog_ipmi_timeout }} panic_wdt_timeout=10\"\n    dest: /etc/modprobe.d/ipmi_watchdog.conf\n\n- name: Configure PVE HA Manager to use ipmi_watchdog\n  copy:\n    content: \"WATCHDOG_MODULE=ipmi_watchdog\"\n    dest: /etc/default/pve-ha-manager\n  notify:\n    - restart watchdog-mux\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "52c67a77492f2e9c59c865a07356cdd804f53ee0", "filename": "meta/main.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\ngalaxy_info:\n  role_name: \"java\"\n  author: \"Lean Delivery team <team@lean-delivery.com>\"\n  description: \"Lean Delivery Java install\"\n  company: \"Epam Systems\"\n  license: \"Apache\"\n  min_ansible_version: \"2.7\"\n  issue_tracker_url: \"https://github.com/lean-delivery/ansible-role-java/issues\"\n  platforms:\n    - name: \"Ubuntu\"\n      versions:\n        - \"xenial\"\n        - \"trusty\"\n    - name: \"Debian\"\n      versions:\n        - \"stretch\"\n        - \"jessie\"\n    - name: \"EL\"\n      versions:\n        - \"6\"\n        - \"7\"\n    - name: \"Windows\"\n      versions:\n        - \"all\"\n\n  galaxy_tags:\n    - \"development\"\n    - \"system\"\n    - \"packaging\"\n    - \"java\"\n    - \"oracle\"\n    - \"jdk\"\n    - \"windows\"\n\ndependencies: []\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "4abf95e62a2aeb04c8fff7a09b63601825237e02", "filename": "tasks/kernel_updates.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Check for kernel update\n  collect_kernel_info:\n    lookup_packages: false\n  register: __pve_kernel_update\n  when: pve_reboot_on_kernel_update\n\n- block:\n  - name: Reboot for kernel update\n    shell: \"sleep 5 && shutdown -r now 'PVE kernel update detected by Ansible'\"\n    async: 1\n    poll: 0\n\n  - name: Wait for server to come back online\n    wait_for_connection:\n      delay: 15\n  when:\n    - pve_reboot_on_kernel_update\n    - __pve_kernel_update.new_kernel_exists\n\n- name: Collect kernel package information\n  collect_kernel_info:\n  register: __pve_kernel\n\n- name: Remove old Debian/PVE kernels\n  apt:\n    name: \"{{ item }}\"\n    state: absent\n    purge: yes\n  with_items: \n    - linux-image-amd64\n    - \"{{ __pve_kernel.old_packages }}\"\n  when:\n    - pve_remove_old_kernels\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "b5a3593e46b31007801918b298ef49f758149ae7", "filename": "tasks/fetch/local.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Artifact stored localy\n  set_fact:\n    java_artifact: '{{ transport_local }}'\n    java_artifact_basename: '{{ transport_local | basename }}'\n\n- name: Split artifact name\n  set_fact:\n    parts: >-\n      {{ java_artifact_basename\n        | regex_findall('^(.*j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)')\n        | first | list }}\n\n- name: Set variables based on split\n  set_fact:\n    java_package: '{{ parts[0][-3:] }}'\n    java_major_version: '{{ parts[1] }}'\n    java_minor_version: '{{ parts[2] }}'\n    java_os: '{{ parts[3] }}'\n    java_arch: '{{ parts[4] }}'\n\n- name: Copy artifact to destination\n  copy:\n    src: '{{ java_artifact }}'\n    dest: '{{ download_path }}'\n  register: file_downloaded\n  retries: 5\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Downloaded artifact\n  set_fact:\n    java_artifact: '{{ file_downloaded.dest }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "2d4fcdff61c5bf4702148e317211f99d55b5860b", "filename": "roles/wordpress-setup/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: database.yml\n  tags: wordpress-setup-database\n- include: self-signed-certificate.yml\n  tags: wordpress-setup-self-signed-certificate\n\n- name: Create web root\n  file:\n    path: \"{{ www_root }}\"\n    owner: \"{{ web_user }}\"\n    group: \"{{ web_group }}\"\n    mode: 0755\n    state: directory\n  with_dict: \"{{ wordpress_sites }}\"\n\n- name: Create logs folder of sites\n  file:\n    path: \"{{ www_root }}/{{ item.key }}/logs\"\n    owner: \"{{ web_user }}\"\n    group: \"{{ web_group }}\"\n    mode: 0755\n    state: directory\n  with_dict: \"{{ wordpress_sites }}\"\n\n- include: nginx.yml\n  tags: wordpress-setup-nginx\n\n- name: Setup WP system cron\n  cron:\n    name: \"{{ item.key }} WordPress cron\"\n    minute: \"*/15\"\n    user: \"{{ web_user }}\"\n    job: \"curl -k -s {{ site_env.wp_siteurl }}/wp-cron.php > /dev/null 2>&1\"\n    cron_file: \"wordpress-{{ item.key | replace('.', '_') }}\"\n  with_dict: \"{{ wordpress_sites }}\"\n  when: site_env.disable_wp_cron and not item.value.multisite.enabled | default(false)\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "255279c1e2ddfcd48016cb6db50ebfb2bb58bc10", "filename": "roles/deploy/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: \"{{ deploy_before | default('../hooks/example.yml') }}\"\n  tags: deploy-before\n- include: initialize.yml\n- include: update.yml\n- include: prepare.yml\n- include: build.yml\n- include: share.yml\n- include: finalize.yml\n- include: \"{{ deploy_after | default('../hooks/example.yml') }}\"\n  tags: deploy-after\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "1682d8177cbe52ca33295109899fae17f0d10dcf", "filename": "tasks/kernel_module_cleanup.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Remove ZFS modprobe configuration\n  file:\n    dest: /etc/modprobe.d/zfs.conf\n    state: absent\n  when: >\n    (pve_zfs_options is not defined) or\n    (pve_zfs_options is defined and not pve_zfs_options) or\n    (not pve_zfs_enabled)\n\n- name: Disable loading of ZFS module on init\n  file:\n    dest: /etc/modules-load.d/zfs.conf\n    state: absent\n  when: not pve_zfs_enabled\n\n- block:\n  - name: Re-enable nmi_watchdog via GRUB config\n    lineinfile:\n      dest: /etc/default/grub\n      line: 'GRUB_CMDLINE_LINUX=\"$GRUB_CMDLINE_LINUX nmi_watchdog=0\"'\n      state: absent\n    register: __pve_grub\n\n  - name: Update GRUB configuration\n    command: update-grub\n    register: __pve_grub_update\n    failed_when: ('error' in __pve_grub_update.stderr)\n    when: __pve_grub|changed\n    tags: skiponlxc\n\n  - name: Remove ipmi_watchdog modprobe configuration\n    file:\n      dest: /etc/modprobe.d/ipmi_watchdog.conf\n      state: absent\n\n  - name: Load softdog\n    modprobe:\n      name: softdog\n\n  - name: Set PVE HA Manager watchdog configuration back to default\n    copy:\n      content: \"WATCHDOG_MODULE=softdog\"\n      dest: /etc/default/pve-ha-manager\n    notify:\n      - restart watchdog-mux\n  when: pve_watchdog != 'ipmi'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "e6a73681765690ae9258a16368bfc37db194fb57", "filename": "roles/users/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Ensure sudo group is present\n  group:\n    name: sudo\n    state: present\n\n- name: Ensure sudo group has sudo privileges\n  lineinfile:\n    dest: /etc/sudoers\n    state: present\n    regexp: \"^%sudo\"\n    line: \"%sudo ALL=(ALL:ALL) ALL\"\n    validate: \"/usr/sbin/visudo -cf %s\"\n\n- name: Fail if root login will be disabled but admin_user will not be a sudoer\n  assert:\n    that:\n      - \"{{ admin_user in (users | map(attribute='name') | list) }}\"\n      - \"{% for item in users if item.name == admin_user %}{{ 'sudo' in item.groups }}{% endfor %}\"\n      - \"{{ admin_user in sudoer_passwords.keys() }}\"\n    msg: \"When `sshd_permit_root_login: false`, you must add `sudo` to the `groups` for admin_user (in `users` hash), and set a password for admin_user in `sudoer_passwords`. Otherwise Ansible could lose the ability to run the necessary sudo commands.\"\n  when: not sshd_permit_root_login\n\n- name: Setup users\n  user:\n    name: \"{{ item.name }}\"\n    group: \"{{ item.groups[0] }}\"\n    groups: \"{{ item.groups | join(',') }}\"\n    password: \"{{ sudoer_passwords[item.name] | default(None) }}\"\n    state: present\n    shell: /bin/bash\n    update_password: always\n  with_items: \"{{ users }}\"\n\n- name: Add web user sudoers items for services\n  template:\n    src: sudoers.d.j2\n    dest: \"/etc/sudoers.d/{{ web_user }}-services\"\n    mode: 0440\n    owner: root\n    group: root\n    validate: \"/usr/sbin/visudo -cf %s\"\n  when: web_sudoers\n\n- name: Add SSH keys\n  authorized_key:\n    user: \"{{ item.0.name }}\"\n    key: \"{{ item.1 }}\"\n  with_subelements:\n    - \"{{ users | default([]) }}\"\n    - keys\n\n- name: Check whether Ansible can connect as admin_user\n  local_action: command ansible {{ inventory_hostname }} -m ping -u {{ admin_user }} {{ cli_options_ping | default('') }}\n  failed_when: false\n  changed_when: false\n  become: no\n  register: admin_user_status\n  when: not sshd_permit_root_login\n\n- name: Fail if root login will be disabled but admin_user cannot connect\n  fail:\n    msg: 'The admin_user is unable to connect to the server. To prevent you from losing access to your server, the playbook has halted before disabling root login (`sshd_permit_root_login: false`). Ensure that the admin_user appears in your `users` hash with a valid entry for `keys`.'\n  when: not sshd_permit_root_login and admin_user_status | failed\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "dbfdacd430f2845fc357100fec23113f73f6f961", "filename": "roles/nginx/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "---\nnginx_path: /etc/nginx\nnginx_logs_root: /var/log/nginx\nnginx_user: www-data\nnginx_fastcgi_buffers: 8 8k\nnginx_fastcgi_buffer_size: 4k\nnginx_ssl_path: \"{{ nginx_path }}/ssl\"\n\n# HSTS defaults\nnginx_hsts_max_age: 31536000\nnginx_hsts_include_subdomains: true\nnginx_hsts_preload: true\n\n# Fastcgi cache params\nnginx_cache_path: /var/cache/nginx\nnginx_cache_duration: 30s\nnginx_cache_key_storage_size: 10m\nnginx_cache_size: 250m\nnginx_cache_inactive: 1h\nnginx_skip_cache_uri: /wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml\nnginx_skip_cache_cookie: comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "127b85b6be45fd25625453baf6eeec2078a4d87e", "filename": "tasks/win_fetch/web.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download artifact from web\n  win_get_url:\n    url: '{{ transport_web }}'\n    dest: >-\n      {{ download_path }}\\{{ (transport_web\n          | urlsplit('path')).split('/')[-1] }}\n    force: False\n  register: file_downloaded\n  retries: 5\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Set downloaded artifact vars\n  set_fact:\n    java_artifact: '{{ file_downloaded.dest }}'\n    java_artifact_basename: '{{ file_downloaded.dest | win_basename }}'\n\n- name: Split artifact name\n  set_fact:\n    parts: >-\n      {{ java_artifact_basename |\n      regex_findall('^(.*j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)') |\n      first | list }}\n\n- name: Set variables based on split\n  set_fact:\n    java_package: '{{ parts[0][-3:] }}'\n    java_major_version: '{{ parts[1] }}'\n    java_minor_version: '{{ parts[2] }}'\n    java_os: '{{ parts[3] }}'\n    java_arch: '{{ parts[4] }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "036f98a30bcafddafd65c65d51d519ba468703a2", "filename": "roles/ssmtp/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Install ssmtp\n  apt:\n    name: ssmtp\n    state: present\n\n- name: ssmtp configuration\n  template:\n    src: ssmtp.conf.j2\n    dest: /etc/ssmtp/ssmtp.conf\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "d440224adc4ee851de11f0050c7dc8ba7a989850", "filename": "tasks/fetch/web.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download artifact from web\n  get_url:\n    url: '{{ transport_web }}'\n    dest: '{{ download_path }}'\n  register: file_downloaded\n  retries: 5\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Set downloaded artifact vars\n  set_fact:\n    java_artifact: '{{ file_downloaded.dest }}'\n    java_artifact_basename: '{{ file_downloaded.dest | basename }}'\n\n- name: Split artifact name\n  set_fact:\n    parts: >-\n      {{ java_artifact_basename |\n      regex_findall('^(.*j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)') |\n      first | list }}\n\n- name: Set variables based on split\n  set_fact:\n    java_package: '{{ parts[0][-3:] }}'\n    java_major_version: '{{ parts[1] }}'\n    java_minor_version: '{{ parts[2] }}'\n    java_os: '{{ parts[3] }}'\n    java_arch: '{{ parts[4] }}'\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "843d3c4bf10a1f3c384f30a291b5407ce7412f30", "filename": "tasks/Windows/tarball.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Mkdir for java installation\n  win_file:\n    path: '{{ java_path }}'\n    state: directory\n\n- name: Unzip java archive\n  win_unzip:\n    src: '{{ java_artifact }}'\n    dest: '{{ java_path }}'\n    creates: '{{ java_path }}\\{{ java_folder }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "474c916497686168c3b2ecde9d6d7d792361b02e", "filename": "roles/nginx/templates/nginx.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n# nginx Configuration File\n# http://wiki.nginx.org/Configuration\n\n# Run as a less privileged user for security reasons.\nuser {{ nginx_user }};\n\n# How many worker threads to run;\n# \"auto\" sets it to the number of CPU cores available in the system, and\n# offers the best performance. Don't set it higher than the number of CPU\n# cores if changing this parameter.\n\n# The maximum number of connections for Nginx is calculated by:\n# max_clients = worker_processes * worker_connections\nworker_processes auto;\n\n# Maximum open file descriptors per process;\n# should be > worker_connections.\nworker_rlimit_nofile 8192;\n\nevents {\n  # When you need > 8000 * cpu_cores connections, you start optimizing your OS,\n  # and this is probably the point at which you hire people who are smarter than\n  # you, as this is *a lot* of requests.\n  worker_connections 8000;\n}\n\n# Default error log file\n# (this is only used when you don't override error_log on a server{} level)\nerror_log  {{ nginx_logs_root }}/error.log warn;\npid        /run/nginx.pid;\n\nhttp {\n  # Hide nginx version information.\n  server_tokens off;\n\n  # Setup the fastcgi cache.\n  fastcgi_buffers {{ nginx_fastcgi_buffers }};\n  fastcgi_buffer_size {{ nginx_fastcgi_buffer_size }};\n  fastcgi_cache_path {{ nginx_cache_path }} levels=1:2 keys_zone=wordpress:{{ nginx_cache_key_storage_size }} max_size={{ nginx_cache_size }} inactive={{ nginx_cache_inactive }};\n  fastcgi_cache_use_stale updating error timeout invalid_header http_500;\n  fastcgi_cache_lock on;\n  fastcgi_cache_key $realpath_root$scheme$host$request_uri$request_method;\n  fastcgi_ignore_headers Cache-Control Expires Set-Cookie;\n  fastcgi_pass_header Set-Cookie;\n  fastcgi_pass_header Cookie;\n\n  # Define the MIME types for files.\n  include       h5bp-server-configs/mime.types;\n  default_type  application/octet-stream;\n\n  # Update charset_types due to updated mime.types\n  charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;\n\n  # Format to use in log files\n  log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                    '$status $body_bytes_sent \"$http_referer\" '\n                    '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n  # Default log file\n  # (this is only used when you don't override access_log on a server{} level)\n  access_log {{ nginx_logs_root }}/access.log main;\n\n  # How long to allow each connection to stay idle; longer values are better\n  # for each individual client, particularly for SSL, but means that worker\n  # connections are tied up longer. (Default: 65)\n  keepalive_timeout 20;\n\n  # Speed up file transfers by using sendfile() to copy directly\n  # between descriptors rather than using read()/write().\n  sendfile        on;\n\n  # Tell Nginx not to send out partial frames; this increases throughput\n  # since TCP frames are filled up before being sent out. (adds TCP_CORK)\n  tcp_nopush      on;\n\n  # Compression\n\n  # Enable Gzip compressed.\n  gzip on;\n\n  # Compression level (1-9).\n  # 5 is a perfect compromise between size and cpu usage, offering about\n  # 75% reduction for most ascii files (almost identical to level 9).\n  gzip_comp_level    5;\n\n  # Don't compress anything that's already small and unlikely to shrink much\n  # if at all (the default is 20 bytes, which is bad as that usually leads to\n  # larger files after gzipping).\n  gzip_min_length    256;\n\n  # Compress data even for clients that are connecting to us via proxies,\n  # identified by the \"Via\" header (required for CloudFront).\n  gzip_proxied       any;\n\n  # Tell proxies to cache both the gzipped and regular version of a resource\n  # whenever the client's Accept-Encoding capabilities header varies;\n  # Avoids the issue where a non-gzip capable client (which is extremely rare\n  # today) would display gibberish if their proxy gave them the gzipped version.\n  gzip_vary          on;\n\n  # Compress all output labeled with one of the following MIME-types.\n  gzip_types\n    application/atom+xml\n    application/javascript\n    application/json\n    application/ld+json\n    application/manifest+json\n    application/rss+xml\n    application/vnd.geo+json\n    application/vnd.ms-fontobject\n    application/x-font-ttf\n    application/x-web-app-manifest+json\n    application/xhtml+xml\n    application/xml\n    font/opentype\n    image/bmp\n    image/svg+xml\n    image/x-icon\n    text/cache-manifest\n    text/css\n    text/plain\n    text/vcard\n    text/vnd.rim.location.xloc\n    text/vtt\n    text/x-component\n    text/x-cross-domain-policy;\n  # text/html is always compressed by HttpGzipModule\n\n  # This should be turned on if you are going to have pre-compressed copies (.gz) of\n  # static files available. If not it should be left off as it will cause extra I/O\n  # for the check. It is best if you enable this in a location{} block for\n  # a specific directory, or on an individual server{} level.\n  # gzip_static on;\n\n  include sites-enabled/*;\n}\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "e61bee13fcc772f09856e6f8cbf4d38fb2574478", "filename": "tasks/win_fetch/local.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Artifact stored localy\n  set_fact:\n    java_artifact: '{{ transport_local }}'\n    java_artifact_basename: '{{ transport_local | win_basename }}'\n\n- name: Split artifact name\n  set_fact:\n    parts: >-\n      {{ java_artifact_basename |\n      regex_findall('^.*(j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)') |\n      first | list }}\n\n- name: Set variables based on split\n  set_fact:\n    java_package: '{{ parts[0][-3:] }}'\n    java_major_version: '{{ parts[1] }}'\n    java_minor_version: '{{ parts[2] }}'\n    java_os: '{{ parts[3] }}'\n    java_arch: '{{ parts[4] }}'\n\n- name: Copy artifact to destination\n  win_copy:\n    src: '{{ transport_local }}'\n    dest: '{{ download_path }}\\'\n  register: file_downloaded\n  retries: 5\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Downloaded artifact\n  set_fact:\n    java_artifact: '{{ download_path }}\\{{ transport_local | win_basename }}'\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "d6068b807c28661bef973343420bb0b6769c3a0b", "filename": "tasks/fetch/security-fetch-local.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Copy security policy artifact to destination\n  copy:\n    src: '{{ java_unlimited_policy_transport_local }}'\n    dest: '{{ download_path }}'\n  register: file_downloaded\n  retries: 5\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Downloaded artifact\n  set_fact:\n    security_policy_java_artifact: '{{ file_downloaded.dest }}'\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "0ece5d0ee3b5e4aaac46f2363fc5037339eea25f", "filename": "tasks/setup-audit.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Ensure auditd is installed\n  package:\n    name: auditd\n    state: present\n  become: true\n  when: _docker_os_dist == \"Ubuntu\" or\n        _docker_os_dist == \"Debian\"\n\n- name: Copy Docker audit rules\n  copy:\n    src: files/etc/audit/rules.d/docker.rules\n    dest: /etc/audit/rules.d/docker.rules\n  become: yes\n  notify: restart auditd\n  when: docker_enable_audit | bool\n\n- name: Ensure Docker audit rules are removed\n  file:\n    path: /etc/audit/rules.d/docker.rules\n    state: absent\n  become: yes\n  notify: restart auditd\n  when: not docker_enable_audit | bool\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "e0114d81c85bc35e11325edcbdb088bd4e026f4e", "filename": "roles/sshd/templates/sshd_config.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\nPort {{ sshd_port }}\nListenAddress {{ sshd_listen_address }}\nProtocol {{ sshd_protocol }}\nHostKey {{ sshd_host_rsa_key }}\nHostKey {{ sshd_host_dsa_key }}\nHostKey {{ sshd_host_ecdsa_key }}\nUsePrivilegeSeparation {{ sshd_use_privilege_separation | ternary('yes', 'no') }}\nKeyRegenerationInterval {{ sshd_key_regeneration_interval }}\nServerKeyBits {{ sshd_server_key_bits }}\nSyslogFacility {{ sshd_syslog_facility }}\nLogLevel {{ sshd_log_level }}\nLoginGraceTime {{ sshd_login_grace_time }}\nPermitRootLogin {{ sshd_permit_root_login | ternary('yes', 'no') }}\nStrictModes {{ sshd_strict_modes | ternary('yes', 'no') }}\nRSAAuthentication {{ sshd_rsa_authentication | ternary('yes', 'no') }}\nPubkeyAuthentication {{ sshd_pubkey_authentication | ternary('yes', 'no') }}\nAuthorizedKeysFile {{ sshd_authorized_keys_file }}\nIgnoreRhosts {{ sshd_ignore_rhosts | ternary('yes', 'no') }}\nRhostsRSAAuthentication {{ sshd_rhosts_rsa_authentication  | ternary('yes', 'no') }}\nHostbasedAuthentication {{ sshd_host_based_authentication | ternary('yes', 'no') }}\nIgnoreUserKnownHosts {{ sshd_ignore_user_known_hosts | ternary('yes', 'no') }}\nPermitEmptyPasswords {{ sshd_permit_empty_passwords | ternary('yes', 'no') }}\nChallengeResponseAuthentication {{ sshd_challenge_response_authentication | ternary('yes', 'no') }}\nPasswordAuthentication {{ sshd_password_authentication | ternary('yes', 'no') }}\nGSSAPIAuthentication {{ sshd_gss_api_authentication | ternary('yes', 'no') }}\nGSSAPICleanupCredentials {{ sshd_gss_api_cleanup_credentials | ternary('yes', 'no') }}\nX11Forwarding {{ sshd_x11_forwarding | ternary('yes', 'no') }}\nX11DisplayOffset {{ sshd_x11_display_offset }}\nPrintMotd {{ sshd_print_motd | ternary('yes', 'no') }}\nPrintLastLog {{ sshd_print_last_log | ternary('yes', 'no') }}\nTCPKeepAlive {{ sshd_tcp_keep_alive | ternary('yes', 'no') }}\nMaxStartups {{ sshd_max_startups }}\nBanner {{ sshd_banner }}\nAcceptEnv {{ sshd_accept_env }}\nSubsystem {{ sshd_subsystem }}\nUsePAM {{ sshd_use_pam | ternary('yes', 'no') }}\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "616e47faa3a3a7554cfa15af8b4a4b4e3d2fc931", "filename": "tasks/main.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n\n- name: Load a variable file based on distribution or OS family\n  include_vars: '{{ distribution }}'\n  with_first_found:\n    - '{{ ansible_system }}/{{ ansible_os_family }}.yml'\n    - default.yml\n  loop_control:\n    loop_var: distribution\n\n- name: Choose platform based task\n  include_tasks: '{{ platform }}'\n  with_first_found:\n    - 'System-{{ ansible_system }}.yml'\n    - not-supported.yml\n  loop_control:\n    loop_var: platform\n\n- name: Apply security policy patch\n  include_tasks: '{{ platform }}'\n  with_first_found:\n    - 'security_policy_apply/{{ ansible_system }}.yml'\n    - not-supported.yml\n  loop_control:\n    loop_var: platform\n  when:\n    - java_unlimited_policy_enabled\n    - java_full_version is version('8.151', '<')\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "31a7494fb9aae43916436c129114279d8d846a0b", "filename": "tasks/win_fetch/openjdk-fallback.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Set java minor version\n  set_fact:\n    minor: \"{{ java_minor_version | default('.*', True) }}\"\n\n- name: 'Fetch root page {{ java_root_page }}'\n  win_uri:\n    url: '{{ openjdk_root_page }}/{{ java_major_version }}/'\n    return_content: True\n    follow_redirects: all\n  register: root_page\n\n- name: Find release url\n  set_fact:\n    release_url: >-\n      {{ root_page['content'] |\n      regex_findall('(https://download\\.oracle\\.com/java/GA/jdk' +\n      java_major_version|string +\n      '[.\\d]+/[\\d\\w]+/' +\n      java_major_version|string +\n      '/GPL/openjdk-' +\n      java_major_version|string +\n      '[\\d._]+windows-x64_bin[\\w\\d.]+)')\n      }}\n\n- name: Exit if OpenJDK version is not General-Availability Release\n  fail:\n    msg: 'OpenJDK version {{ java_major_version }} not GA Release, or maybe something wrong with java.net'\n  when: release_url[1] is not defined\n\n- name: 'Get artifact checksum {{ release_url[1] }}'\n  win_uri:\n    url: '{{ release_url[1] }}'\n    return_content: True\n  register: artifact_checksum\n\n- name: Show artifact checksum\n  debug:\n    var: artifact_checksum.content\n\n- name: Set artifact basename\n  set_fact:\n    artifact_url: '{{ release_url[0] }}'\n    artifact_basename: \"{{ (release_url[0] | urlsplit('path')).split('/')[-1] }}\"\n\n- name: Get SHA256 checksum of file\n  win_stat:\n    path: '{{ download_path }}\\{{ artifact_basename }}'\n    get_checksum: True\n    checksum_algorithm: sha256\n  register: artifact\n\n- name: Download with checksum validation\n  include_tasks: fetch_checksum.yml\n  when: |\n    not artifact.stat.exists\n    or artifact.stat.checksum != artifact_checksum.content\n  retries: 15\n  delay: 2\n  until: artifact.stat.checksum == artifact_checksum.content\n\n- name: Downloaded artifact\n  set_fact:\n    java_artifact: '{{ artifact.stat.path }}'\n\n- name: Split artifact name\n  set_fact:\n    parts: >-\n      {{ java_artifact | win_basename\n        | regex_findall('^(.*j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)')\n        | first | list }}\n\n- name: Set variables based on split\n  set_fact:\n    java_package: '{{ parts[0][-3:] }}'\n    java_major_version: '{{ parts[1] }}'\n    java_minor_version: '{{ parts[2] }}'\n    java_os: '{{ parts[3] }}'\n    java_arch: '{{ parts[4] }}'\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "367499251edb795a54503d5308afa65d9e01900e", "filename": "tasks/compatibility-checks.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n# https://github.com/moby/moby/issues/35873\n# https://access.redhat.com/solutions/2991041\n- name: Compatibility check - Fail if both MountFlags=slave and live-restore are set\n  fail:\n    msg: >\n      Setting both `MountFlags=slave` (docker_enable_mount_flag_fix: true)\n      and `live-restore=true` (docker_daemon_config['live-restore']: true)\n      triggers a bug (https://github.com/moby/moby/issues/35873). For now,\n      don't use both.\n  when: docker_enable_mount_flag_fix\n        and (docker_daemon_config['live-restore'] is defined\n        and docker_daemon_config['live-restore'])\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "b6039a31186baeea5e232e2624eadf758085d808", "filename": "tasks/zfs.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Load ZFS module live\n  modprobe:\n    name: zfs\n    params: \"{{ pve_zfs_options | default(omit) }}\"\n    state: present\n  tags: skiponlxc\n\n- name: Load ZFS module on init\n  copy:\n    content: zfs\n    dest: /etc/modules-load.d/zfs.conf\n\n- name: Copy ZFS modprobe configuration\n  copy:\n    content: \"options zfs {{ pve_zfs_options }}\"\n    dest: /etc/modprobe.d/zfs.conf\n  when: pve_zfs_options is defined and pve_zfs_options\n\n- name: Configure email address for ZFS event daemon notifications\n  lineinfile:\n    dest: /etc/zfs/zed.d/zed.rc\n    line: 'ZED_EMAIL_ADDR=\"{{ pve_zfs_zed_email }}\"'\n    regexp: '^#?ZED_EMAIL_ADDR='\n  notify:\n    - restart zfs-zed\n  when: pve_zfs_zed_email is defined\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "431f8aa5f08a9263cfb4640a8a00d258b3a772f7", "filename": "tasks/fetch/security-fetch-oracle-fallback.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download security policy artifact from Oracle OTN\n  get_url:\n    url: '{{ fallback_oracle_security_policy_artifacts[java_major_version|int] }}'\n    dest: '{{ download_path }}'\n    mode: 0755\n    headers:\n      Cookie: >-\n        gpw_e24=http%3A%2F%2Fwww.oracle.com%2F;\n        oraclelicense=accept-securebackup-cookie;\n        --no-check-certificate\n  register: file_downloaded\n  retries: 15\n  delay: 5\n  until: file_downloaded is succeeded\n\n- name: Downloaded security policy artifact\n  set_fact:\n    security_policy_java_artifact: '{{ file_downloaded.dest }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "ab632736e6b8a9fd221408fc3bb316b184326e1e", "filename": "roles/php/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "disable_default_pool: true\nmemcached_sessions: false\n\nphp_error_reporting: 'E_ALL & ~E_DEPRECATED & ~E_STRICT'\nphp_display_errors: 'Off'\nphp_display_startup_errors: 'Off'\nphp_max_execution_time: 120\nphp_max_input_time: 300\nphp_max_input_vars: 1000\nphp_memory_limit: 96M\nphp_mysqlnd_collect_memory_statistics: 'Off'\nphp_post_max_size: 25M\nphp_sendmail_path: /usr/sbin/ssmtp -t\nphp_session_save_path: /tmp\nphp_upload_max_filesize: 25M\nphp_track_errors: 'Off'\nphp_default_timezone: '{{ default_timezone }}'\n\nphp_opcache_enable: 1\nphp_opcache_enable_cli: 1\nphp_opcache_fast_shutdown: 1\nphp_opcache_interned_strings_buffer: 8\nphp_opcache_max_accelerated_files: 4000\nphp_opcache_memory_consumption: 128\nphp_opcache_revalidate_freq: 60\n\nphp_xdebug_remote_enable: \"false\"\nphp_xdebug_remote_connect_back: \"false\"\nphp_xdebug_remote_host: localhost\nphp_xdebug_remote_port: \"9000\"\nphp_xdebug_remote_log: /tmp/xdebug.log\nphp_xdebug_idekey: XDEBUG\nphp_max_nesting_level: 200\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "03d5cf08e0f7148149e865fa8d6bb83386bc2d87", "filename": "tasks/ssl_letsencrypt.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Install Proxmox Let's Encrypt post-hook script\n  template:\n    src: pve-letsencrypt-post-hook.sh.j2\n    dest: /usr/local/bin/pve-letsencrypt-post-hook.sh\n    mode: 0755\n\n- name: Request Let's Encrypt certificate for {{ ansible_fqdn }}\n  include_role:\n    name: systemli.letsencrypt\n  vars:\n    - letsencrypt_cert:\n        name: \"{{ ansible_fqdn }}\"\n        domains:\n          - \"{{ ansible_fqdn }}\"\n        challenge: http\n        http_auth: standalone\n        post_hook: /usr/local/bin/pve-letsencrypt-post-hook.sh\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "2310e5203bd40fd225b1a49f5d011bca2186c0f9", "filename": "roles/nginx/templates/wordpress.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n# Prevent PHP scripts from being executed inside the uploads folder.\nlocation ~* /app/uploads/.*\\.php$ {\n  deny all;\n}\n\nlocation / {\n  try_files $uri $uri/ /index.php?$args;\n}\n\n# Set the max body size equal to PHP's max POST size.\nclient_max_body_size {{ php_post_max_size | default('25m') | lower }};\n\ninclude h5bp/directive-only/x-ua-compatible.conf;\ninclude h5bp/directive-only/extra-security.conf;\ninclude h5bp/location/cross-domain-fonts.conf;\ninclude h5bp/location/protect-system-files.conf;\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "d16679fa009c7e2d802dec1bc1f677ed06272c78", "filename": "tasks/System-Linux.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: 'Fetch oracle artifact with {{ transport }} transport'\n  include_tasks: '{{ transport_driver }}'\n  with_first_found:\n    - 'fetch/{{ transport }}.yml'\n    - fetch/unknown-transport.yml\n  loop_control:\n    loop_var: transport_driver\n\n- name: Set java full version\n  set_fact:\n    java_full_version: '{{ java_major_version }}.{{ java_minor_version }}'\n\n- name: Perform install from artifacts\n  block:\n    - name: Install requirements\n      package:\n        name: '{{ requirements }}'\n        state: present\n      register: installed_packages\n      until: installed_packages is succeeded\n\n    - name: 'Perform {{ java_binary_type }} install'\n      include_tasks: >-\n        Linux/{{ java_tarball_install | ternary('tarball', ansible_os_family) }}.yml\n\n    - name: Find java_folder\n      find:\n        paths: '{{ java_path }}'\n        recurse: False\n        file_type: directory\n        patterns: '{{ java_folder }}'\n        use_regex: True\n      register: java_dir\n\n    - name: Set actual java directory\n      set_fact:\n        java_folder: \"{{ java_dir.files | map(attribute='path') | list | last | basename }}\"\n\n    - name: Put java profile\n      template:\n        src: java.sh.j2\n        dest: /etc/profile.d/java.sh\n        owner: root\n        group: root\n        mode: 0555\n\n    - name: Check for java binaries existence\n      stat:\n        path: '{{ java_path }}/{{ java_folder }}/bin/{{ binary }}'\n      register: java_binary_collection\n      loop:\n        - java\n        - javac\n        - jar\n      loop_control:\n        loop_var: binary\n\n    - name: Update alternatives\n      alternatives:\n        name: '{{ java_item.binary }}'\n        path: '{{ java_path }}/{{ java_folder }}/bin/{{ java_item.binary }}'\n        link: '/usr/bin/{{ java_item.binary }}'\n        priority: 100\n      when: java_item.stat.exists | bool\n      loop: '{{ java_binary_collection.results }}'\n      loop_control:\n        loop_var: java_item\n  become: True\n\n- name: 'Fetch oracle security policy with {{ java_unlimited_policy_transport }} transport'\n  include_tasks: '{{ transport_driver }}'\n  with_first_found:\n    - 'fetch/security-fetch-{{ java_unlimited_policy_transport }}.yml'\n    - fetch/unknown-transport.yml\n  loop_control:\n    loop_var: transport_driver\n  when:\n    - java_unlimited_policy_enabled\n    - java_full_version is version('8.151', '<')\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "1ef7378b568974e4c0b21b662a1def3916769b6e", "filename": "roles/wordpress-setup/tasks/nginx.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Copy SSL cert\n  copy:\n    src: \"{{ item.value.ssl.cert }}\"\n    dest: \"{{ nginx_ssl_path }}/{{ item.value.ssl.cert | basename }}\"\n    mode: 0640\n  with_dict: \"{{ wordpress_sites }}\"\n  when: item.value.ssl.enabled and item.value.ssl.cert is defined\n\n- name: Copy SSL key\n  copy:\n    src: \"{{ item.value.ssl.key }}\"\n    dest: \"{{ nginx_ssl_path }}/{{ item.value.ssl.key | basename }}\"\n    mode: 0600\n  with_dict: \"{{ wordpress_sites }}\"\n  when: item.value.ssl.enabled and item.value.ssl.key is defined\n\n- name: Create includes.d directories\n  file:\n    path: \"{{ nginx_path }}/includes.d/{{ item }}\"\n    state: directory\n    mode: 0755\n  with_items: \"{{ wordpress_sites.keys() }}\"\n  register: nginx_includes_paths\n\n- name: Template files out to includes.d\n  template:\n    src: \"includes.d/{{ item }}\"\n    dest: \"{{ nginx_path }}/includes.d/{{ item[:-3] }}\"\n  with_lines: \"cd {{ role_path }}/templates/includes.d && find {{ wordpress_sites.keys() | join(' ') }} -type f -name \\\\*.conf.j2 2>/dev/null || :\"\n  register: nginx_includes_managed\n  notify: reload nginx\n\n- name: Retrieve list of existing files in includes.d\n  shell: \"find {{ nginx_includes_paths.results | map(attribute='path') | join(' ') }} -type f -name \\\\*.conf 2>/dev/null || :\"\n  register: nginx_includes_existing\n  changed_when: false\n\n- name: Remove unmanaged files from includes.d\n  file:\n    path: \"{{ item }}\"\n    state: absent\n  with_items: \"{{ nginx_includes_existing.stdout_lines |\n                  difference(nginx_includes_managed.results | default([]) | map(attribute='item') |\n                    map('regex_replace', '(.*)\\\\.j2', '/etc/nginx/includes.d/\\\\1') | list\n                  )\n               }}\"\n  notify: reload nginx\n\n- name: Create Nginx conf for challenges location\n  template:\n    src: \"{{ playbook_dir }}/roles/letsencrypt/templates/acme-challenge-location.conf.j2\"\n    dest: \"{{ nginx_path }}/acme-challenge-location.conf\"\n  notify: reload nginx\n\n- name: Create WordPress configuration for Nginx\n  template:\n    src: \"wordpress-site.conf.j2\"\n    dest: \"{{ nginx_path }}/sites-available/{{ item.key }}.conf\"\n  with_dict: \"{{ wordpress_sites }}\"\n  notify: reload nginx\n\n- name: Enable WordPress site\n  file:\n    src: \"{{ nginx_path }}/sites-available/{{ item.key }}.conf\"\n    dest: \"{{ nginx_path }}/sites-enabled/{{ item.key }}.conf\"\n    owner: root\n    group: root\n    state: link\n  with_dict: \"{{ wordpress_sites }}\"\n  notify: reload nginx\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b1ea80ec405196318c14f1ee28ff4288cc3cca4a", "filename": "roles/php/templates/php-fpm.conf.j2", "repository": "roots/trellis", "decoded_content": "; {{ ansible_managed }}\n\n[wordpress]\nlisten = /var/run/php-fpm-wordpress.sock\nlisten.owner = www-data\nlisten.group = www-data\nuser = {{ web_user }}\ngroup = {{ web_group }}\npm = dynamic\npm.max_children = 10\npm.start_servers = 1\npm.min_spare_servers = 1\npm.max_spare_servers = 3\npm.max_requests = 500\nchdir = {{ www_root }}/\nphp_flag[log_errors] = on\nphp_flag[display_errors] = {{ php_display_errors }}\nphp_admin_value[open_basedir] = {{ www_root }}/:/tmp\n{% if memcached_sessions %}\nphp_value[session.save_handler] = memcached\nphp_value[session.save_path] = \"{{ memcached_listen_ip }}:{{ memcached_port }}\"\n{% endif %}\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "d427df97940ce5ca390df67a1eee49ae0daf4287", "filename": "roles/mariadb/templates/disable-binary-logging.cnf", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n[mysqld]\nskip-log-bin\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "4f1e2add53cda39820110a8b854b3ffbe134e586", "filename": "roles/common/handlers/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: restart memcached\n  service:\n    name: memcached\n    state: restarted\n\n- name: reload php-fpm\n  service:\n    name: php7.0-fpm\n    state: reloaded\n\n- name: reload nginx\n  include: reload_nginx.yml\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "e0071e886aafe0ff9a6bcf0023c7354baebea5ed", "filename": "tasks/fetch/openjdk-fallback.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Set java minor version\n  set_fact:\n    minor: \"{{ java_minor_version | default('.*', True) }}\"\n\n- name: 'Fetch root page {{ openjdk_root_page }}'\n  uri:\n    url: '{{ openjdk_root_page }}/{{ java_major_version }}/'\n    return_content: True\n  register: root_page\n\n- name: Find release url\n  set_fact:\n    release_url: >-\n      {{ root_page['content']\n        | regex_findall('(https://download\\.oracle\\.com/java/GA/jdk'\n          + java_major_version|string + '[.\\d]+/[\\d\\w]+/'\n          + java_major_version|string + '/GPL/openjdk-'\n          + java_major_version|string + '[\\d._]+linux-x64_bin[\\w\\d.]+)')\n      }}\n\n- name: Exit if OpenJDK version is not General-Availability Release\n  fail:\n    msg: 'OpenJDK version {{ java_major_version }} not GA Release'\n  when: release_url[1] is not defined\n\n- name: 'Get artifact checksum {{ release_url[1] }}'\n  uri:\n    url: '{{ release_url[1] }}'\n    return_content: True\n  register: artifact_checksum\n\n- name: Show artifact checksum\n  debug:\n    var: artifact_checksum.content\n\n- name: 'Download artifact from {{ release_url[0] }}'\n  get_url:\n    url: '{{ release_url[0] }}'\n    dest: '{{ download_path }}'\n    checksum: 'sha256:{{ artifact_checksum.content }}'\n  register: file_downloaded\n  retries: 20\n  delay: 5\n  until: file_downloaded is succeeded\n\n- name: Set downloaded artifact variable\n  set_fact:\n    java_artifact: '{{ file_downloaded.dest }}'\n\n- name: Split artifact name\n  set_fact:\n    parts: >-\n      {{ java_artifact\n        | regex_findall('^(.*j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)')\n        | first | list }}\n\n- name: Set variables based on split\n  set_fact:\n    java_package: '{{ parts[0][-3:] }}'\n    java_major_version: '{{ parts[1] }}'\n    java_minor_version: '{{ parts[2] }}'\n    java_os: '{{ parts[3] }}'\n    java_arch: '{{ parts[4] }}'\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "dcaec52544a89fcdb12393ba13a645caf3541c47", "filename": "tasks/configure-non-systemd.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "- name: Combine Docker daemon environment variable configuration\n  set_fact:\n    docker_service_envs: \"{{ docker_service_envs | combine(_docker_service_opts) | combine(docker_daemon_envs) }}\"\n  vars:\n    _docker_service_opts:\n      DOCKER_OPTS: \"{{ docker_daemon_opts }}\"\n\n- name: Setup Docker environment file {{ docker_envs_dir[_docker_os_dist] }}/docker\n  template:\n    src: docker-envs.j2\n    dest: \"{{ docker_envs_dir[_docker_os_dist] }}/docker\"\n  become: yes\n  notify: restart docker\n  vars:\n    docker_envs: \"{{ docker_service_envs }}\""}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "d9768af55f5e2ee9b5c04a49aa4c247eab0dba00", "filename": "tasks/main.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Set distribution facts\n  set_fact:\n    _docker_os_dist: \"{{ ansible_distribution }}\"\n    _docker_os_dist_release: \"{{ ansible_distribution_release }}\"\n    _docker_os_dist_major_version: \"{{ ansible_distribution_major_version }}\"\n    _docker_os_dist_check: yes\n  tags: [\"install\", \"configure\"]\n\n- name: Reinterpret distribution facts for Linux Mint 18\n  set_fact:\n    _docker_os_dist: \"Ubuntu\"\n    _docker_os_dist_release: \"xenial\"\n    _docker_os_dist_major_version: \"16\"\n  when:\n    _docker_os_dist == \"Linux Mint\" and\n    _docker_os_dist_major_version == \"18\"\n  tags: [\"install\", \"configure\"]\n\n# https://wiki.ubuntu.com/SystemdForUpstartUsers\n# Important! systemd is only fully supported in Ubuntu 15.04 and later releases\n- name: Determine usage of systemd\n  shell: \"ps -p1 | grep systemd 1>/dev/null && echo systemd || echo upstart\"\n  become: true\n  changed_when: no\n  register: _determine_systemd_usage\n\n- name: Set fact to indicate systemd is not used\n  set_fact:\n    _docker_systemd_used: \"{{ _determine_systemd_usage is defined and _determine_systemd_usage.stdout == 'systemd' }}\"\n\n- name: Compatibility and distribution checks\n  include_tasks: checks.yml\n  tags: [\"install\", \"configure\"]\n\n- name: Setup Docker package repositories\n  include_tasks: setup-repository.yml\n  tags: [\"install\"]\n\n- name: Remove Docker versions before Docker CE\n  include_tasks: remove-pre-docker-ce.yml\n  when: docker_remove_pre_ce | bool\n  tags: [\"install\"]\n\n- name: Install Docker\n  include_tasks: install-docker.yml\n  tags: [\"install\"]\n\n- name: Configure audit logging\n  include_tasks: setup-audit.yml\n  tags: [\"configure\"]\n\n- name: Apply workarounds for bugs and/or tweaks\n  include_tasks: bug-tweaks.yml\n  tags: [\"configure\"]\n\n- name: Configure systemd service\n  include_tasks: configure-systemd.yml\n  when: _docker_systemd_used | bool\n  tags: [\"configure\"]\n\n- name: Configure non-systemd service\n  include_tasks: configure-non-systemd.yml\n  when: _docker_systemd_used | bool == false\n  tags: [\"configure\"]\n\n- name: Configure Docker\n  include_tasks: configure-docker.yml\n  tags: [\"configure\"]\n\n- name: Postinstall tasks\n  include_tasks: postinstall.yml\n  tags: [\"install\"]"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "22db11b6036f4976917dbc7d58ad467ed2cc7f67", "filename": "tasks/fetch/security-fetch-web.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download security policy artifact from web\n  get_url:\n    url: '{{ java_unlimited_policy_url }}'\n    dest: '{{ download_path }}'\n  register: file_downloaded\n  retries: 3\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Downloaded security policy artifact\n  set_fact:\n    security_policy_java_artifact: '{{ file_downloaded.dest }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "edc908c7a8cb1b3d859b366bfd3fbff51b769216", "filename": "roles/wordpress-setup/templates/https.conf.j2", "repository": "roots/trellis", "decoded_content": "include h5bp/directive-only/ssl.conf;\ninclude h5bp/directive-only/ssl-stapling.conf;\n\nssl_dhparam /etc/nginx/ssl/dhparams.pem;\nssl_buffer_size 1400; # 1400 bytes to fit in one MTU\n\n{% set hsts_max_age = item.value.ssl.hsts_max_age | default(nginx_hsts_max_age) %}\n{% set hsts_include_subdomains = item.value.ssl.hsts_include_subdomains | default(nginx_hsts_include_subdomains) | ternary('includeSubdomains', None) %}\n{% set hsts_preload = item.value.ssl.hsts_preload | default(nginx_hsts_preload) | ternary('preload', None) %}\nadd_header Strict-Transport-Security \"max-age={{ [hsts_max_age, hsts_include_subdomains, hsts_preload] | reject('none') | join('; ') }}\";\n\n{% if item.value.ssl.provider | default('manual') == 'manual' and item.value.ssl.cert is defined and item.value.ssl.key is defined -%}\n  ssl_certificate         {{ nginx_path }}/ssl/{{ item.value.ssl.cert | basename }};\n  ssl_certificate_key     {{ nginx_path }}/ssl/{{ item.value.ssl.key | basename }};\n{%- elif item.value.ssl.provider | default('manual') == 'letsencrypt' -%}\n  ssl_certificate         {{ nginx_path }}/ssl/letsencrypt/{{ item.key }}-bundled.cert;\n  ssl_certificate_key     {{ nginx_path }}/ssl/letsencrypt/{{ item.key }}.key;\n{%- elif item.value.ssl.provider | default('manual') == 'self-signed' -%}\n  ssl_certificate         {{ nginx_path }}/ssl/{{ item.key }}.cert;\n  ssl_trusted_certificate {{ nginx_path }}/ssl/{{ item.key }}.cert;\n  ssl_certificate_key     {{ nginx_path }}/ssl/{{ item.key }}.key;\n{%- endif -%}"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "3699ffb7d55ccf326c76b4f233a9a02c87b36464", "filename": "roles/deploy/tasks/finalize.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: \"{{ deploy_finalize_before | default('../hooks/example.yml') }}\"\n  tags: deploy-finalize-before\n\n- name: Finalize the deploy\n  deploy_helper:\n    path: \"{{ project_root }}\"\n    release: \"{{ deploy_helper.new_release }}\"\n    state: finalize\n\n- include: \"{{ deploy_finalize_after | default('../hooks/example.yml') }}\"\n  tags: deploy-finalize-after\n\n- debug:\n    msg: \"{{ project_version }}@{{ git_clone.after | truncate(7, True, '') }} deployed as release {{ deploy_helper.new_release }}\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b3714fd712ae2e916ecedfc1576bee06a19af8e9", "filename": "roles/memcached/templates/memcached.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n# memcached default config file\n# 2003 - Jay Bonci <jaybonci@debian.org>\n# This configuration file is read by the start-memcached script provided as\n# part of the Debian GNU/Linux distribution.\n\n# Run memcached as a daemon. This command is implied, and is not needed for the\n# daemon to run. See the README.Debian that comes with this package for more\n# information.\n-d\n\n# Log memcached's output to /var/log/memcached\nlogfile /var/log/memcached.log\n\n# Be verbose\n# -v\n\n# Be even more verbose (print client commands as well)\n# -vv\n\n# Start with a cap of 64 megs of memory. It's reasonable, and the daemon default\n# Note that the daemon will grow to this size, but does not start out holding this much\n# memory\n-m {{ memcached_cache_size }}\n\n# Default connection port is 11211\n-p {{ memcached_port }}\n\n# Run the daemon as root. The start-memcached will default to running as root if no\n# -u command is present in this config file\n-u memcache\n\n# Specify which IP address to listen on. The default is to listen on all IP addresses\n# This parameter is one of the only security measures that memcached has, so make sure\n# it's listening on a firewalled interface.\n-l {{ memcached_listen_ip }}\n\n# Limit the number of simultaneous incoming connections. The daemon default is 1024\n-c {{ memcached_max_conn }}\n\n# Lock down all paged memory. Consult with the README and homepage before you do this\n# -k\n\n# Return error when memory is exhausted (rather than removing items)\n# -M\n\n# Maximize core file limit\n# -r\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "1cd33a375e479ddd832bb7effbfdf000c29907d0", "filename": "tasks/bug-tweaks.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "# Configuration to avoid 'Device or resource busy'\n- block:\n  - name: Stat /proc/sys/fs/may_detach_mounts (CentOS/RedHat)\n    stat:\n      path: /proc/sys/fs/may_detach_mounts\n    register: may_detach_mounts\n\n  - name: Ensure fs.may_detach_mounts is set to avoid 'Device or resource busy' (CentOS/RedHat)\n    sysctl:\n      name: fs.may_detach_mounts\n      value: 1\n      sysctl_file: /etc/sysctl.d/99-docker.conf\n      reload: yes\n    become: yes\n    when: may_detach_mounts.stat.exists\n\n  # Keep for compatibility reasons of this role. Now everything is in the same file.\n  - name: Remove systemd drop-in for Docker Mount Flags slave configuration (CentOS/RedHat)\n    file:\n      path: /etc/systemd/system/docker.service.d/mountflags-slave.conf\n      state: absent\n    become: yes\n    notify: restart docker\n\n  - name: Set systemd service MountFlags option to \"slave\" to prevent \"device busy\" errors on CentOS/RedHat 7.3 kernels (CentOS/RedHat)\n    set_fact:\n      docker_systemd_service_config_tweaks: \"{{ docker_systemd_service_config_tweaks + _systemd_service_config_tweaks }}\"\n    vars:\n      _systemd_service_config_tweaks:\n        - 'MountFlags=slave'\n  when:\n    - _docker_os_dist == \"CentOS\" or _docker_os_dist == \"RedHat\"\n    - docker_enable_mount_flag_fix | bool\n    - ansible_kernel | version_compare('4', '<')\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "60828899acae6a4faf97159089eacc595eff26c8", "filename": "roles/wp-cli/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "wp_cli_bin_path: /usr/bin/wp\nwp_cli_phar_url: \"https://github.com/wp-cli/wp-cli/releases/download/v0.23.1/wp-cli-0.23.1.phar\"\nwp_cli_completion_url: \"https://raw.githubusercontent.com/wp-cli/wp-cli/master/utils/wp-completion.bash\"\nwp_cli_completion_path: /etc/bash_completion.d\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "7b80c271ce45ba5b22288a121b682ea0bb612bc2", "filename": "roles/letsencrypt/templates/nginx-challenge-site.conf.j2", "repository": "roots/trellis", "decoded_content": "server {\n  listen 80;\n  server_name {{ item.item.value.site_hosts | reverse_www(enabled=item.item.value.www_redirect | default(true)) | join(' ') }};\n  include acme-challenge-location.conf;\n}\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "6a0f0adf6389e8c8ff0a19f344f87ca2e6defd23", "filename": "roles/nginx/templates/wordpress_multisite_subdirectories.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\nif (!-e $request_filename) {\n  rewrite /wp-admin$ $scheme://$host$uri/ permanent;\n  rewrite ^(/[^/]+)?(/wp-.*) /wp$2 last;\n  rewrite ^(/[^/]+)?(/.*\\.php) /wp$2 last;\n}\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "66cbf8905438f63d4bd734f1f1522450ee9ecc5c", "filename": "tasks/Windows/package.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Install java packages\n  win_package:\n    path: '{{ java_artifact }}'\n    product_id: '{{ java_product_id }}'\n    state: present\n    arguments: '/s'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "1c821320d6b581ca5eb7aa537541cb1513736e7a", "filename": "roles/sshd/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "---\nsshd_port: 22\nsshd_listen_address: 0.0.0.0\nsshd_protocol: 2\nsshd_host_rsa_key: /etc/ssh/ssh_host_rsa_key\nsshd_host_dsa_key: /etc/ssh/ssh_host_dsa_key\nsshd_host_ecdsa_key: /etc/ssh/ssh_host_ecdsa_key\nsshd_use_privilege_separation: true\nsshd_key_regeneration_interval: 3600\nsshd_server_key_bits: 768\nsshd_syslog_facility: AUTH\nsshd_log_level: INFO\nsshd_login_grace_time: 120\nsshd_permit_root_login: true\nsshd_strict_modes: true\nsshd_rsa_authentication: true\nsshd_pubkey_authentication: true\nsshd_authorized_keys_file: \"%h/.ssh/authorized_keys\"\nsshd_ignore_rhosts: true\nsshd_rhosts_rsa_authentication: false\nsshd_host_based_authentication: false\nsshd_ignore_user_known_hosts: false\nsshd_permit_empty_passwords: false\nsshd_challenge_response_authentication: false\nsshd_password_authentication: false\nsshd_gss_api_authentication: false\nsshd_gss_api_cleanup_credentials: true\nsshd_x11_forwarding: true\nsshd_x11_display_offset: 10\nsshd_print_motd: false\nsshd_print_last_log: true\nsshd_tcp_keep_alive: true\nsshd_max_startups: 10:30:100\nsshd_banner: none\nsshd_accept_env: LANG LC_*\nsshd_subsystem: sftp /usr/lib/openssh/sftp-server\nsshd_use_pam: true\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "9dda3e33d5d8df8837e8fac94b71036c17a9b882", "filename": "roles/wordpress-setup/tasks/self-signed-certificate.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Generate self-signed certificates\n  shell: >\n    openssl req -subj \"/CN={{ item.value.site_hosts | first }}\" -new\n    -newkey rsa:2048 -days 3650 -nodes -x509 -sha256\n    -keyout {{ item.key }}.key -out {{ item.key }}.cert\n  args:\n    chdir: \"{{ nginx_path }}/ssl\"\n    creates: \"{{ item.key }}.*\"\n  with_dict: \"{{ wordpress_sites }}\"\n  when: item.value.ssl.enabled and item.value.ssl.provider | default('manual') == 'self-signed'\n  notify:\n    - reload nginx\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "ca651a81c832e244316491d8a99f8e4fb37171fe", "filename": "roles/remote-user/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Determine whether to connect as root or admin_user\n  local_action: command ansible {{ inventory_hostname }} -m ping -u {{ ansible_user | default('root') }} {{ cli_options_ping | default('') }}\n  failed_when: false\n  changed_when: false\n  register: root_status\n\n- name: Set remote user for each host\n  set_fact:\n    ansible_user: \"{{ root_status | success | ternary(ansible_user | default('root'), admin_user) }}\"\n\n- name: Announce which user was selected\n  debug:\n    msg: \"Note: Ansible will attempt connections as user = {{ ansible_user }}\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "811ac7a54742e360e6eb383d430c99eadcca00b0", "filename": "roles/deploy/tasks/prepare.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: \"{{ deploy_prepare_before | default('../hooks/example.yml') }}\"\n  tags: deploy-prepare-before\n\n- name: write unfinished file\n  file:\n    path: \"{{ project_source_path }}/{{ deploy_helper.unfinished_filename }}\"\n    state: touch\n\n- name: Check for project repo subtree\n  stat:\n    path: \"{{ project_source_path }}/{{ project.repo_subtree_path }}\"\n  register: project_subtree_full_path\n  when: project.repo_subtree_path is defined\n\n- name: Fail if repo_subtree_path is set incorrectly\n  fail:\n    msg: \"repo subtree is set to '{{ project.repo_subtree_path }}' but that path does not exist in the repo. Edit `repo_subtree_path` for '{{ site }}' in `wordpress_sites.yml`.\"\n  when: project_subtree_full_path is defined and not project_subtree_full_path.stat.exists\n\n- name: Create new release dir\n  file:\n    path: \"{{ deploy_helper.new_release_path }}\"\n    state: directory\n\n- name: Run git archive to populate new build dir\n  shell: git archive {{ project_version }} | tar xf - -C {{ deploy_helper.new_release_path }}\n  args:\n    chdir: \"{{ project_source_path }}\"\n  when: project.repo_subtree_path is not defined\n\n- name: Run git archive with subdirectory to populate new build dir\n  shell: git archive {{ project_version }} {{ project.repo_subtree_path }} | tar -x --strip-components {{ project.repo_subtree_path.split('/') | count }} -f - -C {{ deploy_helper.new_release_path }}\n  args:\n    chdir: \"{{ project_source_path }}\"\n  when: project.repo_subtree_path is defined\n\n- include: \"{{ deploy_prepare_after | default('../hooks/example.yml') }}\"\n  tags: deploy-prepare-after\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b14fb1687b7b16b6a7b066784d715b4afa2fa870", "filename": "roles/ferm/templates/etc/ferm/filter-input.d/dport_accept.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n# manual customization of this file is not recommended\n\nprotocol {{ item.protocol | default('tcp') }} dport ({{ item.dport | join(' ') }}) {\n{% if item.saddr is defined and item.saddr %}\n  saddr ({{ item.saddr | join(' ') }}) ACCEPT;\n{% else %}\n{% if item.accept_any | default(True) %}\n  ACCEPT;\n{% else %}\n  # connections from any IP address not allowed\n{% endif %}\n{% endif %}\n}"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "dbdfeae808ef4ac56c2b22fa9298a6d01adf3d06", "filename": "tasks/pve_add_node.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- set_fact:\n    __pve_current_node: \"{{ item }}\"\n\n- name: Add node to Proxmox cluster\n  command: \"pvecm add {{ hostvars[groups[pve_group][0]]['ansible_default_ipv4']['address'] }}{{ ' -use_ssh' if ansible_distribution_release == 'stretch' else '' }} -ring0_addr {{ pve_cluster_ring0_addr }}{% if pve_cluster_ring1_addr is defined %} -ring1_addr {{ pve_cluster_ring1_addr }}{% endif %}\"\n  args:\n    creates: \"{{ pve_cluster_conf }}\"\n  when:\n    - \"inventory_hostname == __pve_current_node\"\n\n- name: Remove stale corosync lock file due to lack of quorum during initialization\n  file:\n    dest: \"{{ pve_base_dir }}/priv/lock/file-corosync_conf\"\n    state: absent\n  when:\n    - \"inventory_hostname == __pve_current_node\"\n    - \"inventory_hostname == groups[pve_group][1]\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "a957171a0ef9bc40ab1e297f190a96cdcd9ac245", "filename": "roles/mariadb/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Add MariaDB MySQL apt-key\n  apt_key:\n    url: \"http://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search={{ mariadb_keyserver_fingerprint }}\"\n    state: present\n\n- name: Add MariaDB MySQL deb and deb-src\n  apt_repository:\n    repo: \"{{ item }}\"\n    state: present\n  with_items:\n    - \"deb http://{{ mariadb_mirror }}/mariadb/repo/{{ mariadb_version }}/ubuntu {{ mariadb_dist | default(ansible_distribution_release) }} main\"\n    - \"deb-src http://{{ mariadb_mirror }}/mariadb/repo/{{ mariadb_version }}/ubuntu {{ mariadb_dist | default(ansible_distribution_release) }} main\"\n\n- name: Install MySQL client\n  apt:\n    name: mariadb-client\n    state: present\n\n- block:\n  - name: Install MariaDB MySQL server\n    apt:\n      name: mariadb-server\n      state: present\n\n  - name: Disable MariaDB binary logging\n    template:\n      src: disable-binary-logging.cnf\n      dest: /etc/mysql/conf.d\n      owner: root\n      group: root\n    when: mariadb_binary_logging_disabled\n\n  - name: Restart MariaDB MySQL Server\n    service:\n      name: mysql\n      state: restarted\n      enabled: true\n\n  - name: Set root user password\n    mysql_user:\n      name: root\n      host: \"{{ item }}\"\n      password: \"{{ mysql_root_password }}\"\n      check_implicit_admin: yes\n      state: present\n    with_items:\n      - \"{{ inventory_hostname }}\"\n      - 127.0.0.1\n      - ::1\n      - localhost\n\n  - name: Copy .my.cnf file with root password credentials.\n    template:\n      src: my.cnf.j2\n      dest: ~/.my.cnf\n      owner: root\n      group: root\n      mode: 0600\n\n  - name: Delete anonymous MySQL server users\n    mysql_user:\n      user: \"\"\n      host: \"{{ item }}\"\n      state: absent\n    with_items:\n      - localhost\n      - \"{{ inventory_hostname }}\"\n      - \"{{ ansible_hostname }}\"\n\n  - name: Remove the test database\n    mysql_db:\n      name: test\n      state: absent\n\n  when: not sites_using_remote_db | count\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "2772cb1c8286167f957f2b4fb62ff9228ad73a4c", "filename": "tasks/main.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n# tasks file for ansible-role-proxmox\n- name: Gather distribution specific variables\n  include_vars: \"debian-{{ ansible_distribution_release }}.yml\"\n\n- assert:\n    that:\n      - \"hostvars[item].ansible_default_ipv4.address is defined\"\n    msg: \"Missing IP address and other information for {{ item }}. Have you gathered its facts?\"\n  with_items: \"{{ groups[pve_group] }}\"\n\n- assert:\n    that:\n      - \"inventory_hostname in groups[pve_group]\"\n    msg: \"This host does not appear to be in the group {{ pve_group }}, did you specify the pve_group host variable correctly?\"\n  when: pve_cluster_enabled\n\n- include: ssh_cluster_config.yml\n\n- name: Run handlers if needed (sshd reload)\n  meta: flush_handlers\n\n- name: Enumerate all cluster hosts within the hosts file\n  blockinfile:\n    dest: /etc/hosts\n    marker: \"# {mark} ANSIBLE MANAGED: Proxmox Cluster Hosts\"\n    content: |\n      {% for host in groups[pve_group] %}\n      {{ hostvars[host].ansible_default_ipv4.address }} {{ hostvars[host].ansible_fqdn }} {{ hostvars[host].ansible_hostname }}{% if ansible_fqdn == hostvars[host].ansible_fqdn %} pvelocalhost{% endif %}\n\n      {% endfor %}\n\n- name: Remove conflicting lines in hosts files\n  lineinfile:\n    dest: /etc/hosts\n    # expanded, this turns out to be, for example:\n    # regexp: '^(?!10\\.0\\.3\\.17 test01\\.lxc test01( pvelocalhost)?)(?!10\\.0\\.3\\.17)[\\w:.]+(\\s+.*)?\\s(test01\\.lxc|test01|pvelocalhost)(\\s+.*|\\s*)$'\n    # basically first we ignore lines that match from the host enumeration task\n    # above, then we match against different IPs (e.g. NOT 10.0.3.17) that have\n    # the hostname/fqdn we inserted a record for previously, taking care also to\n    # detect word boundaries (\\b wasn't working for some reason)\n    regexp: '^(?!{{ hostvars[item].ansible_default_ipv4.address | regex_escape() }} {{ hostvars[item].ansible_fqdn | regex_escape() }} {{ hostvars[item].ansible_hostname | regex_escape() }}( pvelocalhost)?)(?!{{ hostvars[item].ansible_default_ipv4.address | regex_escape() }})[\\w:.]+(\\s+.*)?\\s({{ hostvars[item].ansible_fqdn | regex_escape() }}|{{ hostvars[item].ansible_hostname | regex_escape() }}{% if ansible_fqdn == hostvars[item].ansible_fqdn %}|pvelocalhost{% endif %})(\\s+.*|\\s*)$'\n    state: absent\n    backup: yes\n  with_items: \"{{ groups[pve_group] }}\"\n\n- name: Trust Proxmox' packaging key\n  apt_key:\n    data: \"{{ lookup('file', pve_release_key) }}\"\n    id: \"{{ pve_release_key_id }}\"\n    state: present\n\n- name: Remove os-prober package\n  apt:\n    name: os-prober\n    state: absent\n\n- name: Add Proxmox repository\n  apt_repository:\n    repo: \"{{ pve_repository_line }}\"\n    filename: proxmox\n    state: present\n  register: __pve_repo\n\n- name: Run apt-get dist-upgrade on repository changes\n  apt:\n    update_cache: yes\n    cache_valid_time: 3600\n    upgrade: dist\n  when: __pve_repo.changed\n\n- name: Perform system upgrades\n  apt:\n    update_cache: yes\n    cache_valid_time: 3600\n    upgrade: yes\n  when: pve_run_system_upgrades\n\n- include: identify_needed_packages.yml\n\n- name: Install Proxmox VE and related packages\n  apt:\n    name: \"{{ item }}\"\n    state: latest\n  with_items: \"{{ __pve_install_packages }}\"\n\n- block:\n  - name: Remove automatically installed PVE Enterprise repo configuration\n    apt_repository:\n      repo: \"{{ item }}\"\n      filename: pve-enterprise\n      state: absent\n    with_items:\n      - \"deb https://enterprise.proxmox.com/debian jessie pve-enterprise\"\n      - \"deb https://enterprise.proxmox.com/debian stretch pve-enterprise\"\n      - \"deb https://enterprise.proxmox.com/debian/pve jessie pve-enterprise\"\n      - \"deb https://enterprise.proxmox.com/debian/pve stretch pve-enterprise\"\n\n  - name: Remove subscription check wrapper function in web UI\n    patch:\n      src: \"00_remove_checked_command_{{ ansible_distribution_release }}.patch\"\n      basedir: /\n      strip: 1\n      backup: yes\n    when:\n      - pve_remove_subscription_warning\n\n  when:\n    - \"'pve-no-subscription' in pve_repository_line\"\n\n- include: kernel_updates.yml\n\n- include: ipmi_watchdog.yml\n  when: pve_watchdog == 'ipmi'\n\n- include: zfs.yml\n  when: pve_zfs_enabled\n\n- include: kernel_module_cleanup.yml\n\n- include: pve_cluster_config.yml\n  when: pve_cluster_enabled\n\n- name: Configure Proxmox groups\n  proxmox_group:\n  args: \"{{ item }}\"\n  with_items: \"{{ pve_groups }}\"\n  when: \"not pve_cluster_enabled or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])\"\n\n- name: Configure Proxmox user accounts\n  proxmox_user:\n  args: \"{{ item }}\"\n  with_items: \"{{ pve_users }}\"\n  when: \"not pve_cluster_enabled or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])\"\n\n- name: Configure Proxmox ACLs\n  proxmox_acl:\n  args: \"{{ item }}\"\n  with_items: \"{{ pve_acls }}\"\n  when: \"not pve_cluster_enabled or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])\"\n\n- include: ssl_config.yml\n  when:\n    - pve_ssl_private_key is defined\n    - pve_ssl_certificate is defined\n\n- include: ssl_letsencrypt.yml\n  when: pve_ssl_letsencrypt\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "5d9fc984a2b90755a6d96c13bf61e4c9dbdf68d8", "filename": "tasks/win_fetch/fetch_checksum.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: 'Download artifact from {{ artifact_url }}'\n  win_get_url:\n    url: '{{ artifact_url }}'\n    dest: '{{ download_path }}\\{{ artifact_basename }}'\n    force: True\n\n- name: Get SHA256 checksum of file\n  win_stat:\n    path: '{{ download_path }}\\{{ artifact_basename }}'\n    get_checksum: True\n    checksum_algorithm: sha256\n  register: artifact\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "dca1ba50528ea24afae42cb9e0c518fd69712d1c", "filename": "roles/wordpress-setup/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "site_uses_local_db: \"{{ site_env.db_host == 'localhost' }}\"\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "61ac429e562756dadd4e3e8ca5abac923e87a024", "filename": "meta/main.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "galaxy_info:\n  author: Bjorn Oscarsson\n  description: \"Installs and configures Docker Community Edition (CE)\"\n  min_ansible_version: 2.4\n  license: MIT\n  platforms:\n  - name: Fedora\n    versions:\n      - 24\n      - 25\n      - 26\n\n  - name: EL\n    versions:\n      - 7\n\n  - name: Debian\n    versions:\n      - jessie\n      - stretch\n\n  - name: Ubuntu\n    versions:\n      - trusty\n      - xenial\n\n  galaxy_tags:\n    - docker\n    - containers\n    - system\n\ndependencies: []\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "1a30ce0d7ac940a2b215b5e9326d244894c03a0a", "filename": "roles/letsencrypt/templates/acme-challenge-location.conf.j2", "repository": "roots/trellis", "decoded_content": "location ^~ /.well-known/acme-challenge/ {\n  alias {{ acme_tiny_challenges_directory }}/;\n  try_files $uri =404;\n}\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "31802eed3fa0a8ab46f20e08074fe5ce4e19d0b8", "filename": "roles/wordpress-install/tasks/directories.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Create web root of sites\n  file:\n    path: \"{{ www_root }}/{{ item.key }}/current/web\"\n    owner: \"{{ web_user }}\"\n    group: \"{{ web_group }}\"\n    mode: 0755\n    state: directory\n  with_dict: \"{{ wordpress_sites }}\"\n\n- name: Create shared folder of sites\n  file:\n    path: \"{{ www_root }}/{{ item.key }}/shared\"\n    owner: \"{{ web_user }}\"\n    group: \"{{ web_group }}\"\n    mode: 0755\n    state: directory\n  with_dict: \"{{ wordpress_sites }}\"\n\n- name: Change site owner to user\n  file:\n    path: \"{{ www_root }}/{{ item.key }}\"\n    owner: \"{{ web_user }}\"\n    group: \"{{ web_group }}\"\n    state: directory\n    recurse: yes\n  with_dict: \"{{ wordpress_sites }}\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b935bfa0584196fdf47c8b3fbbdbef807afee8fa", "filename": "roles/ferm/README.md", "repository": "roots/trellis", "decoded_content": "## What is ansible-ferm? [![Build Status](https://secure.travis-ci.org/nickjj/ansible-ferm.png)](http://travis-ci.org/nickjj/ansible-ferm)\n\nIt is an [ansible](http://www.ansible.com/home) role to manage iptables using the ever so flexible ferm tool.\n\n### What problem does it solve and why is it useful?\n\nWorking with iptables directly can be really painful and the ufw module is decent for basic needs but sometimes you need a bit more control. I also like the approach of writing templates rather than executing allow/deny commands with ufw. I feel like it sets the tone for a more idempotent setup.\n\n## Role variables\n\nBelow is a list of default values along with a description of what they do.\n\n```\n# Should the firewall be enabled?\nferm_enabled: true\n\n# Should ferm do ip-based tagging/locking when it detects someone is trying to port scan you?\nferm_limit_portscans: false\n\n# The default actions to take for certain policies. You likely want to keep them at the default values.\n# This ensures all ports are blocked until you white list them.\nferm_default_policy_input: DROP\nferm_default_policy_output: ACCEPT\nferm_default_policy_forward: DROP\n\n# The lists to use to provide your own rules. This is explained more below.\nferm_input_list: []\nferm_input_group_list: []\nferm_input_host_list: []\n\n# The amount in seconds to cache apt-update.\napt_cache_valid_time: 86400\n```\n\n### `ferm_input_list` with the `dport_accept` template\n\nThe use case for this would be to white list ports to be opened.\n\n```\nferm_input_list:\n    # Choose the template to use.\n    # REQUIRED: It can be either `dport_accept` or `dport_limit`.\n  - type: \"dport_accept\"\n\n    # Which protocol should be used?\n    # OPTIONAL: Defaults to tcp.\n    protocol: \"tcp\"\n\n    # Which ports should be open?\n    # REQUIRED: It can be the port value or a service in `/etc/services`.\n    dport: [\"http\", \"https\"]\n\n    # Which IP addresses should be white listed?\n    # OPTIONAL: Defaults to an empty list.\n    saddr: []\n\n    # Should all IP addresses be white listed?\n    # OPTIONAL: Defaults to true.\n    accept_any: true\n\n    # Which filename should be written out?\n    # OPTIONAL: Defaults to the first port listed in `dport`.\n\n    # The filename which will get written to `/etc/ferm/filter-input.d/nginx_accept`.\n    filename: \"nginx_accept\"\n\n    # Should this rule be deleted?\n    # OPTIONAL: Defaults to false.\n    delete: false\n```\n\n### `ferm_input_list` with the `dport_limit` template\n\nThe use case for this would be to limit connections on specific ports based on an amount of time. This could be used to harden your security.\n\n```\nferm_input_list:\n    # Choose the template to use.\n    # REQUIRED: It can be either `dport_accept` or `dport_limit`.\n  - type: \"dport_limit\"\n\n    # Which protocol should be used?\n    # OPTIONAL: Defaults to tcp.\n    protocol: \"tcp\"\n\n    # Which ports should be open?\n    # REQUIRED: It can be the port value or a service in `/etc/services`.\n    dport: [\"ssh\"]\n\n    # How many seconds to count in between the hits?\n    # OPTIONAL: Defaults to 300.\n    seconds: \"300\"\n\n    # How many connections should be allowed per the amount of seconds you specified.\n    # OPTIONAL: Defaults to 5.\n    hits: \"5\"\n\n    # Should this rule be disabled?\n    # OPTIONAL: Defaults to false.\n    disabled: false\n```\n\n#### `ferm_input_group_list` / `ferm_input_host_list` with either template\n\nThis would be the same as above except it would be scoped to the groups and hosts list.\n\n## Example app play in your playbook\n\nTo open the http/https ports on your server add the following to the appropriate group or host vars file:\n\n```\nferm_input_group_list:\n  - type: \"dport_accept\"\n    dport: [\"http\", \"https\"]\n    filename: \"nginx_accept\"\n```\n\nI only chose the `nginx_accept` filename because I use nginx. You can name it whatever you want or even remove the filename to have this role automatically generate a filename for you.\n\nThis file will be written to `/etc/ferm/filter-input.d/nginx_accept.conf` and it will contain the rules necessary to open the `http` and `https` ports.\n\n## Attribution\n\nMany thanks to [nickjj](https://github.com/nickjj/) for creating the [original version](https://github.com/nickjj/ansible-ferm/) of this role.\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "f5baaece22539537743f2b00b1fed402e441db8a", "filename": "roles/memcached/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "---\nmemcached_cache_size: 64\nmemcached_fs_file_max: 756024\nmemcached_listen_ip: 127.0.0.1\nmemcached_max_conn: 1024\nmemcached_port: 11211\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "916b56539bd330c1fa0588c1071ce2932e61654d", "filename": "roles/nginx/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Add Nginx PPA\n  apt_repository:\n    repo: \"ppa:nginx/development\"\n    update_cache: yes\n\n- name: Install Nginx\n  apt:\n    name: nginx\n    state: present\n    force: yes\n\n- name: Create SSL directory\n  file:\n    mode: 0700\n    path: \"{{ nginx_path }}/ssl\"\n    state: directory\n\n- name: Generate strong unique Diffie-Hellman group.\n  command: openssl dhparam -out dhparams.pem 2048\n  args:\n    chdir: \"{{ nginx_path }}/ssl\"\n    creates: \"{{ nginx_path }}/ssl/dhparams.pem\"\n  notify: reload nginx\n  tags: [diffie-hellman]\n\n- name: Grab h5bp/server-configs-nginx\n  git:\n    repo: \"https://github.com/h5bp/server-configs-nginx.git\"\n    dest: \"{{ nginx_path }}/h5bp-server-configs\"\n    version: 82181a672a7c26f9bc8744fead80318d8a2520b1\n    force: yes\n\n- name: Move h5bp configs\n  command: cp -R {{ nginx_path }}/h5bp-server-configs/h5bp {{ nginx_path }}/h5bp\n  args:\n    creates: \"{{ nginx_path }}/h5bp/\"\n\n- name: Create nginx.conf\n  template:\n    src: nginx.conf.j2\n    dest: \"{{ nginx_path }}/nginx.conf\"\n  notify: reload nginx\n\n- name: Disable default server\n  file:\n    path: \"{{ nginx_path }}/sites-enabled/default\"\n    state: absent\n  notify: reload nginx\n\n- name: Enable better default site to drop unknown requests\n  command: cp {{ nginx_path }}/h5bp-server-configs/sites-available/no-default {{ nginx_path }}/sites-enabled/no-default.conf\n  args:\n    creates: \"{{ nginx_path }}/sites-enabled/no-default.conf\"\n  notify: reload nginx\n\n- name: Create base WordPress config\n  template:\n    src: wordpress.conf.j2\n    dest: \"{{ nginx_path }}/wordpress.conf\"\n\n- name: Create base WordPress subdirectory Multisite config\n  template:\n    src: wordpress_multisite_subdirectories.conf.j2\n    dest: \"{{ nginx_path }}/wordpress_multisite_subdirectories.conf\"\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "856efa5272a2b6e42d7f889b59f268a79c0b1513", "filename": "tasks/setup-repository.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Ensure python and deps for Ansible modules\n  raw: dnf install -y python2 python2-dnf libselinux-python\n  become: true\n  changed_when: false\n  when: _docker_os_dist == \"Fedora\"\n\n- name: Update APT cache\n  apt:\n    update_cache: yes\n  changed_when: false\n  become: true\n  when: _docker_os_dist == \"Ubuntu\" or\n        _docker_os_dist == \"Debian\"\n\n- name: Ensure packages are installed for repository setup\n  package:\n    name: \"{{ item }}\"\n    state: present\n  with_items:\n    - \"{{ docker_repository_related_packages[_docker_os_dist] }}\"\n  become: true\n  when: _docker_os_dist == \"Ubuntu\" or\n        _docker_os_dist == \"Debian\" or\n        _docker_os_dist == \"CentOS\" or\n        _docker_os_dist == \"RedHat\"\n\n- name: Add Docker official GPG key\n  apt_key:\n    url: https://download.docker.com/linux/{{ _docker_os_dist|lower }}/gpg\n    state: present\n  become: true\n  when: (_docker_os_dist == \"Ubuntu\" and _docker_os_dist_major_version > '14')\n        or _docker_os_dist == \"Debian\"\n\n- name: Add Docker APT key (alternative for older Ubuntu systems without SNI).\n  shell: \"curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\"\n  args:\n    warn: false\n  become: true\n  changed_when: false\n  when: _docker_os_dist == \"Ubuntu\" and\n        _docker_os_dist_major_version == '14'\n\n- name: Add Docker CE repository (Ubuntu/Debian)\n  apt_repository:\n    repo: deb [arch=amd64] https://download.docker.com/linux/{{ _docker_os_dist|lower }} {{ _docker_os_dist_release }} stable {{ (docker_enable_ce_edge == true) | ternary('edge','') }}\n    state: present\n    filename: 'docker-ce'\n  become: true\n  when: _docker_os_dist == \"Ubuntu\" or\n        _docker_os_dist == \"Debian\"\n\n- name: Add Docker CE repository (Fedora/CentOS/RedHat)\n  get_url:\n    url: \"{{ docker_repository_url[_docker_os_dist] }}\"\n    dest: /etc/yum.repos.d/docker-ce.repo\n    mode: 0644\n  become: true\n  register: docker_repo\n  when: _docker_os_dist == \"CentOS\" or\n        _docker_os_dist == \"Fedora\" or\n        _docker_os_dist == \"RedHat\"\n\n- name: Determine Docker CE Edge repo status (Fedora/CentOS/RedHat)\n  shell: \"{{ docker_cmd_check_edge_repo_status[_docker_os_dist] }}\"\n  args:\n    warn: false\n  ignore_errors: yes\n  changed_when: false\n  register: cmd_docker_ce_edge_enabled\n  when: _docker_os_dist == \"CentOS\" or\n        _docker_os_dist == \"Fedora\" or\n        _docker_os_dist == \"RedHat\"\n\n- name: Set current Docker CE Edge repo status fact (Fedora/CentOS/RedHat)\n  set_fact:\n    _fact_docker_ce_edge_enabled: \"{{ cmd_docker_ce_edge_enabled.stdout == 'enabled = True' }}\"\n  when: _docker_os_dist == \"CentOS\" or\n        _docker_os_dist == \"Fedora\" or\n        _docker_os_dist == \"RedHat\"\n\n- name: Enable/Disable Docker CE Edge Repository (Fedora/CentOS/RedHat)\n  shell: \"{{ docker_cmd_enable_disable_edge_repo[_docker_os_dist] }}\"\n  become: true\n  when: (_docker_os_dist == \"CentOS\" or _docker_os_dist == \"Fedora\" or _docker_os_dist == \"RedHat\") and\n        _fact_docker_ce_edge_enabled != docker_enable_ce_edge\n\n# disable rt-beta so we don't get a 403 error retrieving repomd.xml\n- name: Check if rhel-7-server-rt-beta-rpms Repository is enabled (RedHat)\n  shell: \"subscription-manager repos --list-enabled | grep rhel-7-server-rt-beta-rpms\"\n  become: true\n  register: cmd_rhel_rt_beta_repo_enabled\n  when: _docker_os_dist == \"RedHat\"\n  changed_when: false\n  failed_when: cmd_rhel_rt_beta_repo_enabled.rc not in [ 0, 1 ]\n\n- name: Disable rhel-7-server-rt-beta-rpms Repository (RedHat)\n  shell: \"subscription-manager repos --disable=rhel-7-server-rt-beta-rpms\"\n  become: true\n  when: _docker_os_dist == \"RedHat\" and cmd_rhel_rt_beta_repo_enabled.rc == 0\n\n# container-selinux package wants this\n- name: Check if rhel-7-server-extras-rpms Repository is enabled (RedHat)\n  shell: \"subscription-manager repos --list-enabled | grep rhel-7-server-extras-rpms\"\n  become: true\n  register: cmd_rhel_extras_repo_enabled\n  when: _docker_os_dist == \"RedHat\"\n  changed_when: false\n  failed_when: cmd_rhel_extras_repo_enabled.rc not in [ 0, 1 ]\n\n- name: Enable rhel-7-server-extras-rpms Repository (RedHat)\n  shell: \"subscription-manager repos --enable=rhel-7-server-extras-rpms\"\n  become: true\n  when: _docker_os_dist == \"RedHat\" and cmd_rhel_extras_repo_enabled.rc == 1\n\n- name: Update repository cache\n  shell: \"{{ docker_cmd_update_repo_cache[_docker_os_dist] }}\"\n  args:\n    warn: false\n  become: true\n  when: docker_repo.changed"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "539fe307207767300111e957c355ae4139843ad7", "filename": "roles/deploy/tasks/update.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: \"{{ deploy_update_before | default('../hooks/example.yml') }}\"\n  tags: deploy-update-before\n\n- name: Check whether project source path is a git repo\n  stat:\n    path: \"{{ project_source_path }}/.git\"\n  register: git_project\n\n- name: Get current git remote URL\n  command: git config --get remote.origin.url\n  args:\n    chdir: \"{{ project_source_path }}\"\n  register: remote_origin_url\n  when: git_project.stat.exists\n  changed_when: false\n\n- name: Update git remote URL\n  command: git remote set-url origin {{ project_git_repo }}\n  args:\n    chdir: \"{{ project_source_path }}\"\n  when: git_project.stat.exists and remote_origin_url.stdout != project_git_repo\n\n- name: Clone project files\n  git:\n    repo: \"{{ project_git_repo }}\"\n    dest: \"{{ project_source_path }}\"\n    version: \"{{ project_version }}\"\n    accept_hostkey: yes\n  ignore_errors: true\n  no_log: true\n  register: git_clone\n\n- name: Failed connection to remote repo\n  fail:\n    msg: |\n      Git repo {{ project.repo }} cannot be accessed. Please verify the repository exists and you have SSH forwarding set up correctly.\n      More info:\n      > https://roots.io/trellis/docs/deploys/#ssh-keys\n      > https://roots.io/trellis/docs/ssh-keys/#cloning-remote-repo-using-ssh-agent-forwarding\n  when: git_clone | failed\n\n- include: \"{{ deploy_update_after | default('../hooks/example.yml') }}\"\n  tags: deploy-update-after\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "cb5999a3b9fb349dbbd12c78744a1583b3a34dee", "filename": "roles/wordpress-install/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: directories.yml\n  tags: wordpress-install-directories\n\n- name: Create .env file\n  template:\n    src: \"env.j2\"\n    dest: \"/tmp/{{ item.key }}.env\"\n    owner: \"{{ web_user }}\"\n    group: \"{{ web_group }}\"\n  with_dict: \"{{ wordpress_sites }}\"\n\n- name: Copy .env file into web root\n  command: rsync -ac --info=NAME /tmp/{{ item.key }}.env {{ www_root }}/{{ item.key }}/current/.env\n  with_dict: \"{{ wordpress_sites }}\"\n  register: env_file\n  changed_when: env_file.stdout == \"{{ item.key }}.env\"\n\n- name: Install Dependencies with Composer\n  command: composer install\n  args:\n    chdir: \"{{ www_root }}/{{ item.key }}/current/\"\n  register: composer_results\n  with_dict: \"{{ wordpress_sites }}\"\n  changed_when: \"'Nothing to install or update' not in composer_results.stderr\"\n\n- name: Install WP\n  command: wp core install\n           --allow-root\n           --url=\"{{ site_env.wp_home }}\"\n           --title=\"{{ item.value.site_title | default(item.key) }}\"\n           --admin_user=\"{{ item.value.admin_user | default('admin') }}\"\n           --admin_password=\"{{ vault_wordpress_sites[item.key].admin_password }}\"\n           --admin_email=\"{{ item.value.admin_email }}\"\n  args:\n    chdir: \"{{ www_root }}/{{ item.key }}/current/\"\n  register: wp_install_results\n  with_dict: \"{{ wordpress_sites }}\"\n  when: item.value.site_install | default(true) and not item.value.multisite.enabled | default(false)\n  changed_when: \"'WordPress is already installed.' not in wp_install_results.stdout\"\n\n- name: Setup Permalink Structure\n  command: wp rewrite structure {{ item.value.initial_permalink_structure | default(\"/%postname%/\") }} --allow-root\n  args:\n    chdir: \"{{ www_root }}/{{ item.key }}/current/\"\n  with_dict: \"{{ wordpress_sites }}\"\n  when: wp_install_results | changed and not item.value.multisite.enabled | default(false)\n\n- name: Install WP Multisite\n  command: wp core multisite-install\n           --allow-root\n           --url=\"{{ site_env.wp_home }}\"\n           --base=\"{{ item.value.multisite.base_path | default('/') }}\"\n           --subdomains=\"{{ item.value.multisite.subdomains | default('false') }}\"\n           --title=\"{{ item.value.site_title | default(item.key) }}\"\n           --admin_user=\"{{ item.value.admin_user | default('admin') }}\"\n           --admin_password=\"{{ vault_wordpress_sites[item.key].admin_password }}\"\n           --admin_email=\"{{ item.value.admin_email }}\"\n  args:\n    chdir: \"{{ www_root }}/{{ item.key }}/current/\"\n  register: wp_install_results\n  with_dict: \"{{ wordpress_sites }}\"\n  when: item.value.site_install | default(true) and item.value.multisite.enabled | default(false)\n  changed_when: \"'The network already exists.' not in wp_install_results.stdout\"\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "1568045abb2c35552562235c46ca0dee8d4091bb", "filename": "tasks/not-supported.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Warn on unsupported platform\n  fail:\n    msg: |\n      This role does not support '{{ ansible_os_family }}' platform.\n        Please contact support@lean-delivery.com\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "d373337628b6bc3cbbff5c37b25053d1aaa4ef28", "filename": "roles/ssmtp/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "ssmtp_auth_method: LOGIN\nssmtp_from_override: 'Yes'\nssmtp_start_tls: 'Yes'\nssmtp_tls: 'Yes'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "796d07f75d90ed330cb958b6f99009d6edad660c", "filename": "roles/deploy/hooks/example.yml", "repository": "roots/trellis", "decoded_content": "# This is a placeholder example hook file\n# To use deploy hooks, please refer to the docs at https://roots.io/trellis/docs/deploys\n#\n# tl;dr\n#   1. create a tasks file you wish to include on a certain hook\n#   2. set one of the below hook variables to \"{{ playbook_dir }}/path/to/tasks-file.yml\" in `deploy.yml`\n#\n#  Available hooks:\n#    - deploy_before\n#    - deploy_initialize_before\n#    - deploy_initialize_after\n#    - deploy_update_before\n#    - deploy_update_after\n#    - deploy_prepare_before\n#    - deploy_prepare_after\n#    - deploy_build_before\n#    - deploy_build_after\n#    - deploy_share_before\n#    - deploy_share_after\n#    - deploy_finalize_before\n#    - deploy_finalize_after\n#    - deploy_after\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "a8b7be4fc0f1c1e5ad4159e3dd45657efe2d8fd4", "filename": "handlers/main.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n# handlers file for ansible-role-docker-ce\n\n- name: restart docker\n  service:\n    name: docker\n    state: restarted\n  become: yes\n  tags: [\"install\", \"configure\"]\n\n# Workaround because systemd cannot be used: https://github.com/ansible/ansible/issues/22171\n- name: restart auditd\n  command: service auditd restart\n  args:\n    warn: no\n  become: yes\n  tags: [\"install\", \"configure\"]\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "16985eb8f59f9faa8a941bda7eedf6b92148488e", "filename": "roles/ferm/handlers/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: restart ferm\n  service: name=ferm state=restarted\n  when: ferm_enabled"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "7970e300625058b8d94f16621819beaee536a14f", "filename": "handlers/main.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n# handlers file for ansible-role-proxmox\n- name: restart pvedaemon\n  service:\n    name: pvedaemon\n    state: restarted\n\n- name: restart pveproxy\n  service:\n    name: pveproxy\n    state: restarted\n\n- name: reload sshd configuration\n  service:\n    name: sshd\n    state: reloaded\n\n- name: restart watchdog-mux\n  service:\n    name: watchdog-mux\n    state: restarted\n\n- name: restart zfs-zed\n  service:\n    name: zfs-zed\n    state: restarted\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "43bf5314178f3c63243742cbabe7d40107978e45", "filename": "tasks/win_fetch/security-winfetch-oracle-fallback.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download security policy artifact from Oracle OTN\n  win_get_url:\n    url: '{{ fallback_oracle_security_policy_artifacts[java_major_version|int] }}'\n    dest: >-\n      {{ download_path }}\\{{ (fallback_oracle_security_policy_artifacts[java_major_version|int]\n        | urlsplit('path')).split('/')[-1] }}\n    mode: 0755\n    headers:\n      Cookie: 'oraclelicense=accept-securebackup-cookie'\n    force: False\n  register: file_downloaded\n  retries: 15\n  delay: 5\n  until: file_downloaded is succeeded\n\n- name: Downloaded security policy artifact\n  set_fact:\n    security_policy_java_artifact: '{{ file_downloaded.dest }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "900e70caf51a5ac5050e9df0408fbd2621be9982", "filename": "roles/letsencrypt/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "sites_using_letsencrypt: \"[{% for name, site in wordpress_sites.iteritems() if site.ssl.enabled and site.ssl.provider | default('manual') == 'letsencrypt' %}'{{ name }}',{% endfor %}]\"\nletsencrypt_enabled: \"{{ sites_using_letsencrypt | count > 0 }}\"\nsite_uses_letsencrypt: \"{{ item.value.ssl is defined and item.value.ssl.enabled | default(false) and item.value.ssl.provider | default('manual') == 'letsencrypt' }}\"\nsites_need_confs: \"False in [{% for item in nginx_confs.results if 'stat' in item %}{{ item.stat.exists }},{% endfor %}]\"\n\nacme_tiny_repo: 'https://github.com/diafygi/acme-tiny.git'\nacme_tiny_commit: '69a457269a6392ac31b629b4e103e8ea7dd282c9'\n\nacme_tiny_software_directory: /usr/local/letsencrypt\nacme_tiny_data_directory: /var/lib/letsencrypt\nacme_tiny_challenges_directory: \"{{ www_root }}/letsencrypt\"\n\n# Path to the local file containing the account key to copy to the server.\n# Secure this file using Git-crypt for example.\n# Leave this blank to generate a new account key that will need to be registered manually with Letsencrypt.org\n#letsencrypt_account_key_source_file: /my/account.key\n\n# Content of the account key to copy to the server.\n# Secure this key using Ansible Vault for example.\n# Leave this blank to generate a new account key that will need to be registered manually with Letsencrypt.org\n#letsencrypt_account_key_source_content: |\n#  -----BEGIN RSA PRIVATE KEY-----\n#  MIIJKAJBBBKCaGEA63J7t9dqyua5+Q+P6M3iHtLEKpF/AZcZNBHr1F2Oo8+Hfyvl\n#  KWXliiWjUORxDxI1c56Rw2VCIExnFjWJAdSLv6/XaQWo2T7U28bkKbAlCF9=\n#  -----END RSA PRIVATE KEY-----\n\nletsencrypt_ca: 'https://acme-v01.api.letsencrypt.org'\n\nletsencrypt_account_key: '{{ acme_tiny_data_directory }}/account.key'\n\nletsencrypt_intermediate_cert_path: /etc/ssl/certs/lets-encrypt-x3-cross-signed.pem\nletsencrypt_intermediate_cert_url: 'https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem'\nletsencrypt_intermediate_cert_sha256sum: 'e446c5e9dbef9d09ac9f7027c034602492437a05ff6c40011d7235fca639c79a'\n\nletsencrypt_keys_dir: \"{{ nginx_ssl_path }}/letsencrypt\"\nletsencrypt_certs_dir: \"{{ nginx_ssl_path }}/letsencrypt\"\n\n# the minimum age (in days) after which a certificate will be renewed\nletsencrypt_min_renewal_age: 60\n\n# the days of a month the cronjob should be run. Make sure to run it rather often, three times per month is a pretty\n# good value. It does not harm to run it often, as it will only regenerate certificates that have passed a certain age\n# (60 days by default).\nletsencrypt_cronjob_daysofmonth: 1,11,21\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "1028b130d3bf8cd37ec29774ff5a7a657e0479fc", "filename": "tasks/win_fetch/security-winfetch-web.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download security policy artifact from web\n  win_get_url:\n    url: '{{ java_unlimited_policy_url }}'\n    dest: >-\n      {{ download_path }}\\{{ (java_unlimited_policy_url\n        | urlsplit('path')).split('/')[-1] }}\n    force: False\n  register: file_downloaded\n  retries: 3\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Downloaded security policy artifact\n  set_fact:\n    security_policy_java_artifact: '{{ file_downloaded.dest }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "0e51f92ea34f44b470b249e9b5e11d4dd7536d03", "filename": "roles/ferm/templates/etc/ferm/ferm.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n# manual customization of this file is not recommended\n\ntable filter {\n  chain INPUT {\n    policy {{ ferm_default_policy_input }};\n\n    # connection tracking\n    mod conntrack ctstate INVALID DROP;\n    mod conntrack ctstate (ESTABLISHED RELATED) ACCEPT;\n\n    # allow local connections\n    interface lo ACCEPT;\n\n    # drop connections from bad guys\n    mod recent name \"badguys\" update seconds 3600 {\n      mod limit limit 3/hour limit-burst 5 {\n        LOG log-prefix \"iptables-recent-badguys: \" log-level warning;\n      }\n      DROP;\n    }\n\n    # allow ICMP protocol\n    protocol icmp ACCEPT;\n\n    @include 'filter-input.d/';\n\n{% if ferm_limit_portscans %}\n    # catch bad guys (port scanners)\n    mod recent set name \"badguys\" {\n      mod limit limit 3/hour limit-burst 5 {\n        LOG log-prefix \"iptables-portscan: \" log-level warning;\n      }\n    }\n\n{% endif %}\n    # reject everything else\n    protocol udp REJECT reject-with icmp-port-unreachable;\n    protocol tcp REJECT reject-with tcp-reset;\n    REJECT reject-with icmp-proto-unreachable;\n  }\n\n  chain OUTPUT {\n    policy {{ ferm_default_policy_output }};\n\n    # connection tracking\n    mod conntrack ctstate INVALID DROP;\n    mod conntrack ctstate (ESTABLISHED RELATED) ACCEPT;\n  }\n\n  chain FORWARD {\n    policy {{ ferm_default_policy_forward }};\n\n    # connection tracking\n    mod conntrack ctstate INVALID DROP;\n    mod conntrack ctstate (ESTABLISHED RELATED) ACCEPT;\n  }\n}\n\n@include 'ferm.d/';"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "3af663a73e434f6c8cf4771891996e2d43d93c89", "filename": "roles/fail2ban/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: ensure fail2ban is installed\n  apt:\n    pkg: fail2ban\n    state: latest\n    update_cache: true\n    cache_valid_time: \"{{ apt_cache_valid_time }}\"\n  notify:\n    - restart fail2ban\n\n- name: ensure fail2ban is configured\n  template:\n    src: \"{{ item }}.j2\"\n    dest: /etc/fail2ban/{{ item }}\n  with_items:\n    - jail.local\n    - fail2ban.local\n  notify:\n    - restart fail2ban\n\n- name: ensure fail2ban starts on a fresh reboot\n  service:\n    name: fail2ban\n    state: started\n    enabled: yes\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "45aafdeb37b11275784ea92cfdc6d378078a1710", "filename": "tasks/Linux/Debian.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Install java packages\n  apt:\n    deb: '{{ java_artifact | default(omit) }}'\n    name: '{{ (openjdk_package if transport == \"repositories\") | default(omit) }}'\n    state: present\n    update_cache: True\n    cache_valid_time: 3600\n  register: package_install\n  until: package_install is succeeded\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b74edbcb059b414dda2413d9dc8caa47a5c4ebb7", "filename": "roles/letsencrypt/tasks/certificates.yml", "repository": "roots/trellis", "decoded_content": "- name: Generate private keys\n  shell: openssl genrsa 4096 > {{ letsencrypt_keys_dir }}/{{ item.key }}.key\n  args:\n    creates: \"{{ letsencrypt_keys_dir }}/{{ item.key }}.key\"\n  when: site_uses_letsencrypt\n  with_dict: \"{{ wordpress_sites }}\"\n  tags: [letsencrypt_keys]\n\n- name: Ensure correct permissions on private keys\n  file:\n    path: \"{{ letsencrypt_keys_dir }}/{{ item.key }}.key\"\n    mode: 0600\n  when: site_uses_letsencrypt\n  with_dict: \"{{ wordpress_sites }}\"\n  tags: [letsencrypt_keys]\n\n- name: Generate CSRs for single domain keys\n  shell: openssl req -new -sha256 -key \"{{ letsencrypt_keys_dir }}/{{ item.key }}.key\" -subj \"/CN={{ item.value.site_hosts[0] }}\" > {{ acme_tiny_data_directory }}/csrs/{{ item.key }}.csr\n  args:\n    creates: \"{{ acme_tiny_data_directory }}/csrs/{{ item.key }}.csr\"\n  when: site_uses_letsencrypt and item.value.site_hosts | length == 1 and not item.value.www_redirect | default(true)\n  with_dict: \"{{ wordpress_sites }}\"\n  tags: [letsencrypt_keys]\n\n- name: Generate CSRs for multiple domain keys\n  shell: \"openssl req -new -sha256 -key '{{ letsencrypt_keys_dir }}/{{ item.key }}.key' -subj '/' -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf '[SAN]\\nsubjectAltName=DNS:{{ item.value.site_hosts | reverse_www(enabled=item.value.www_redirect | default(true)) | join(',DNS:') }}')) > {{ acme_tiny_data_directory }}/csrs/{{ item.key }}.csr\"\n  args:\n    executable: /bin/bash\n    creates: \"{{ acme_tiny_data_directory }}/csrs/{{ item.key }}.csr\"\n  when: site_uses_letsencrypt and item.value.www_redirect | default(true)\n  with_dict: \"{{ wordpress_sites }}\"\n  tags: [letsencrypt_keys]\n\n- name: Generate the initial certificate\n  command: ./renew-certs.py\n  args:\n    chdir: \"{{ acme_tiny_data_directory }}\"\n  register: generate_initial_cert\n  changed_when: generate_initial_cert.stdout is defined and 'Created' in generate_initial_cert.stdout\n  notify: reload nginx\n\n- name: Disable Nginx site\n  file:\n    path: \"{{ nginx_path }}/sites-enabled/letsencrypt-{{ item.key }}.conf\"\n    state: absent\n  with_dict: \"{{ wordpress_sites }}\"\n  when: sites_need_confs\n  notify: reload nginx\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "379c8cfac2c83d9baef1c66e84242062d12297a9", "filename": "roles/memcached/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Install memcached\n  apt:\n    name: \"{{ item }}\"\n    state: present\n    update_cache: yes\n  with_items:\n  - memcached\n  - php-memcached\n\n- name: Copy the client configuration file\n  template:\n    src: memcached.conf.j2\n    dest: /etc/memcached.conf\n  notify: restart memcached\n\n- name: Set the max open file descriptors\n  sysctl:\n    name: fs.file-max\n    value: \"{{ memcached_fs_file_max }}\"\n    state: present\n\n- name: Start the memcached service\n  service:\n    name: memcached\n    state: started\n    enabled: yes\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "32b3d530d433c3cde2d993f8b4afb3a548d1f059", "filename": "roles/mariadb/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "mariadb_binary_logging_disabled: true\nmariadb_keyserver_fingerprint: \"0xcbcb082a1bb943db\"\nmariadb_mirror: nyc2.mirrors.digitalocean.com\nmariadb_version: \"10.0\"\nmariadb_dist: trusty\nmysql_root_user: root\n\nsites_using_remote_db: \"[{% for name, site in wordpress_sites.iteritems() if site.env is defined and site.env.db_host | default('localhost') != 'localhost' %}'{{ name }}',{% endfor %}]\"\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "cbc12be8733f621a8090fcdac25d9b1152a85e66", "filename": "tasks/Linux/RedHat.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Install java packages\n  yum:\n    name: '{{ (transport == \"repositories\") | ternary(openjdk_package, java_artifact)  }}'\n    state: present\n  register: package_install\n  until: package_install is succeeded\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "8e8953bc7f1c07fadadbe6ccd0533e2e5fb7ab1b", "filename": "roles/php/templates/xdebug.ini.j2", "repository": "roots/trellis", "decoded_content": "; {{ ansible_managed }}\n\n[XDebug]\nzend_extension=\"xdebug.so\"\nxdebug.remote_enable={{ php_xdebug_remote_enable }}\nxdebug.remote_connect_back={{ php_xdebug_remote_connect_back }}\nxdebug.remote_host={{ php_xdebug_remote_host }}\nxdebug.remote_port={{ php_xdebug_remote_port }}\nxdebug.remote_handler=\"dbgp\"\nxdebug.remote_log={{ php_xdebug_remote_log }}\nxdebug.idekey=\"{{ php_xdebug_idekey }}\"\nxdebug.max_nesting_level = {{ php_max_nesting_level }}\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "057f4a0f8aed5a36d902e7f8d4887d4fef8a9833", "filename": "tasks/fetch/unknown-transport.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Warn on unsupported transport\n  debug:\n    msg: |\n      This role does not support '{{ transport }}' transport.\n      Please contact support@lean-delivery.com\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "55fb38e8be99490670f8146297ac02998b68f9dc", "filename": "tasks/security_policy_apply/Linux.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Become block\n  block:\n    - name: Unzip patch file\n      unarchive:\n        src: '{{ security_policy_java_artifact }}'\n        dest: '{{ java_path }}/{{ java_folder }}/jre/lib/security'\n        remote_src: True\n        owner: root\n        group: root\n        mode: 0755\n\n    - name: Apply patch file\n      copy:\n        src: \"{{ java_path }}/{{ java_folder }}/jre/lib/security/\\\n          {{ security_patch_folders[java_major_version|int] }}/{{ policy_item }}\"\n        dest: '{{ java_path }}/{{ java_folder }}/jre/lib/security/'\n        remote_src: True\n        directory_mode: True\n        owner: root\n        group: root\n        mode: 0644\n      loop:\n        - local_policy.jar\n        - US_export_policy.jar\n        - README.txt\n      loop_control:\n        loop_var: policy_item\n\n    - name: Apply setting\n      replace:\n        path: '{{ java_path }}/{{ java_folder }}/jre/lib/security/java.security'\n        regexp: '#crypto.policy=unlimited'\n        replace: 'crypto.policy=unlimited'\n  become: True\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "fea3db7deedfae5cda34586f41ce0507664ff6b9", "filename": "tasks/fetch/repositories.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Install openjdk from repositories\n  debug:\n    msg: 'Install openjdk from repositories'\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "0339be3a5085eb8101c8caa2388dbdf93cb43f70", "filename": "meta/main.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "galaxy_info:\n  author: Musee Ullah\n  description: Installs and configures Proxmox 5.x and 4.x (for clustering)\n  company: FireEye, Inc.\n  license: MIT\n\n  min_ansible_version: 2.4\n\n  platforms:\n  - name: Debian\n    versions:\n    - jessie\n    - stretch\n\n  galaxy_tags:\n    - proxmox\n    - pve\n    - virtualization\n    - kvm\n    - lxc\n\ndependencies: []\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "7f2902ea256af5502adc08d5388cc4b345a6d43d", "filename": "roles/letsencrypt/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "- include: setup.yml\n- include: nginx.yml\n- include: certificates.yml\n\n- name: Install cronjob for key generation\n  cron:\n    cron_file: letsencrypt-certificate-renewal\n    name: letsencrypt certificate renewal\n    user: root\n    job: cd {{ acme_tiny_data_directory }} && ./renew-certs.py && service nginx reload\n    day: \"{{ letsencrypt_cronjob_daysofmonth }}\"\n    hour: 4\n    minute: 30\n    state: present\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "2f607660191c4f09568f7dd436eee37be65538ea", "filename": "roles/common/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "minimum_ansible_version: 2.0.2.0\ndefault_timezone: Etc/UTC\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "ba0e31b0a7f94c98e906413c9933ea7731d38c41", "filename": "roles/deploy/hooks/build-after.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Check for composer.json in project root or project_subtree_path\n  stat:\n    path: \"{{ deploy_helper.new_release_path }}/composer.json\"\n  register: composer_json\n\n- name: Fail if composer.json not found\n  fail:\n    msg: \"Unable to find a `composer.json` file in the root of '{{ deploy_helper.new_release_path }}'. Make sure your repo has a `composer.json` file in its root or edit `repo_subtree_path` for '{{ site }}' in `wordpress_sites.yml` so it points to the directory with a `composer.json` file.\"\n  when: not composer_json.stat.exists\n\n- name: Install Composer dependencies\n  command: composer install --no-ansi --no-dev --no-interaction --no-progress --optimize-autoloader --no-scripts\n  args:\n    chdir: \"{{ deploy_helper.new_release_path }}\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "47eb9823c1366ded4d02ab7c1249a092de66efba", "filename": "roles/php/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Add PHP 7.0 PPA\n  apt_repository:\n    repo: \"ppa:ondrej/php\"\n    update_cache: yes\n\n- name: Install PHP 7.0\n  apt:\n    name: \"{{ item }}\"\n    state: present\n    force: yes\n  with_items:\n  - php7.0-cli\n  - php7.0-common\n  - php7.0-curl\n  - php7.0-dev\n  - php7.0-fpm\n  - php7.0-gd\n  - php7.0-mbstring\n  - php7.0-mcrypt\n  - php7.0-mysql\n  - php7.0-opcache\n  - php7.0-xml\n  - php7.0-xmlrpc\n  - php7.0-zip\n\n- name: Install Xdebug\n  apt:\n    name: php-xdebug\n    state: latest\n  when: xdebug_install | default(false)\n\n- name: xdebug configuration file\n  template:\n    src: xdebug.ini.j2\n    dest: /etc/php/7.0/mods-available/xdebug.ini\n  when: xdebug_install | default(false)\n\n- name: Start php7.0-fpm service\n  service:\n    name: php7.0-fpm\n    state: started\n    enabled: true\n\n- name: Create socket directory\n  file:\n    path: /var/run/php7.0-fpm/\n    state: directory\n\n- name: Disable default pool\n  command: mv /etc/php/7.0/fpm/pool.d/www.conf /etc/php/7.0/fpm/pool.d/www.disabled\n  args:\n    creates: /etc/php/7.0/fpm/pool.d/www.disabled\n  when: disable_default_pool\n  notify: reload php-fpm\n\n- name: PHP configuration file\n  template:\n    src: php.ini.j2\n    dest: /etc/php/7.0/fpm/php.ini\n  notify: reload php-fpm\n\n- name: php-fpm configuration file\n  template:\n    src: php-fpm.conf.j2\n    dest: /etc/php/7.0/fpm/pool.d/wordpress.conf\n  notify: reload php-fpm\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "59255cc6bfaa7a7cfe582bc0760ddfba28bd5b25", "filename": "roles/rollback/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: user-release.yml\n  when: release is defined\n\n- include: prior-release.yml\n  when: release is not defined\n\n- name: Check whether target release was from a successful deploy\n  stat:\n    path: \"{{ new_release_path }}/DEPLOY_UNFINISHED\"\n  register: target\n\n- name: Fail if target release was from failed deploy\n  fail:\n    msg: \"Cannot switch to release at {{ new_release_path }}. It is from an unfinished deploy. You may manually specify a different release using --extra-vars='release=12345678901234'.\"\n  when: target.stat.exists | default(False)\n\n- name: Link 'current' directory to target release\n  file:\n    path: \"{{ project_root }}/current\"\n    src: \"{{ new_release_path }}\"\n    state: link\n"}, {"commit_sha": "00104851b3724644a0cbef4ad8eb6333c90740e2", "sha": "8b508e91e5cbced75729327c78e9eafeda0151b1", "filename": "tasks/generate.yml", "repository": "jdauphant/ansible-role-ssl-certs", "decoded_content": "---\n  - name: Generate RSA key\n    command: openssl genrsa -out {{ ssl_certs_privkey_path }} {{ ssl_certs_key_size }} creates={{ ssl_certs_privkey_path }}\n\n  - name: RSA key file ownership\n    file: path={{ ssl_certs_privkey_path }} owner={{ ssl_certs_path_owner }} group={{ ssl_certs_path_group }} mode={{ ssl_certs_mode }}\n\n  - name: Generate CSR\n    command: openssl req -new -sha256 -subj \"{{ ssl_certs_fields }}\" -key {{ ssl_certs_privkey_path }} -out {{ ssl_certs_csr_path }} creates={{ ssl_certs_csr_path }}\n\n  - name: CSR file ownership\n    file: path={{ ssl_certs_csr_path }} owner={{ ssl_certs_path_owner }} group={{ ssl_certs_path_group }} mode={{ ssl_certs_mode }}\n\n  - name: Generate self-signed SSL certificate\n    command: openssl req -nodes -x509 -days {{ ssl_certs_days }} -in {{ ssl_certs_csr_path }} -key {{ ssl_certs_privkey_path }} -out {{ ssl_certs_cert_path }} -extensions v3_ca creates={{ ssl_certs_cert_path }}\n    when: ssl_certs_generate_self_signed\n\n  - name: Self-signed SSL certificate file ownership\n    file: path={{ ssl_certs_cert_path }} owner={{ ssl_certs_path_owner }} group={{ ssl_certs_path_group }} mode={{ ssl_certs_mode }}\n    when: ssl_certs_generate_self_signed\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "aa855834ebfbfc266e8e79aa4b7e94ac610b8ed9", "filename": "roles/deploy/tasks/share.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: \"{{ deploy_share_before | default('../hooks/example.yml') }}\"\n  tags: deploy-share-before\n\n- name: Ensure shared sources are present\n  file:\n    path: \"{{ deploy_helper.shared_path }}/{{ item.src }}\"\n    state: \"{{ item.type | default('directory') }}\"\n    mode: \"{{ item.mode | default('0755') }}\"\n  with_items: \"{{ project_shared_children }}\"\n\n- name: Ensure shared paths are absent\n  file:\n    path: \"{{ deploy_helper.new_release_path }}/{{ item.path }}\"\n    state: absent\n  with_items: \"{{ project_shared_children }}\"\n\n- name: Create shared symlinks\n  file:\n    path: \"{{ deploy_helper.new_release_path }}/{{ item.path }}\"\n    src: \"{{ deploy_helper.shared_path }}/{{ item.src }}\"\n    state: link\n  with_items: \"{{ project_shared_children }}\"\n\n- include: \"{{ deploy_share_after | default('../hooks/example.yml') }}\"\n  tags: deploy-share-after\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "6609113c885252f6b997eba96336e806f639ad57", "filename": "tasks/remove-pre-docker-ce.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Determine Docker version\n  command: bash -c \"docker version | grep Version | awk '{print $2}'\"\n  ignore_errors: yes\n  changed_when: false\n  register: cmd_docker_version\n\n- name: Set fact if old Docker installation shall be removed\n  set_fact:\n    remove_old_docker: \"{{ docker_remove_pre_ce | bool }} == true and {{ cmd_docker_version.stdout_lines[0] | search('-ce') }} == false\"\n  when: cmd_docker_version.stdout_lines is defined and cmd_docker_version.stdout_lines[0] is defined\n\n- name: Check if Docker is running\n  command: systemctl status docker\n  ignore_errors: yes\n  changed_when: false\n  register: service_docker_status\n  when: remove_old_docker | default(false) | bool == true\n  become: true\n\n- name: Stop Docker service\n  service:\n    name: docker\n    state: stopped\n  when: \"service_docker_status.rc | default(1) == 0\"\n\n- name: Remove old Docker installation before Docker CE\n  package:\n    name: \"{{ item }}\"\n    state: absent\n  become: true\n  when: remove_old_docker|default(false) | bool == true\n  with_items:\n    - \"{{ docker_old_packages[_docker_os_dist] }}\"\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "1cee9f468edd00b1853b883f2254bc4d062a3544", "filename": "tasks/Linux/tarball.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Mkdir for java installation\n  file:\n    path: '{{ java_path }}/{{ java_folder }}'\n    state: directory\n    owner: root\n    group: root\n    mode: 0755\n\n- name: 'Install java {{ java_full_version }}'\n  unarchive:\n    src: '{{ java_artifact }}'\n    dest: '{{ java_path }}/{{ java_folder }}'\n    remote_src: True\n    owner: root\n    group: root\n    mode: 0755\n    extra_opts: [--strip-components=1]\n    creates: '{{ java_path }}/{{ java_folder }}/bin/'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "0fcfe9da080c59efad8473e054275f72d9d1d0d6", "filename": "roles/php/templates/php.ini.j2", "repository": "roots/trellis", "decoded_content": "; {{ ansible_managed }}\n\n[PHP]\nerror_reporting = {{ php_error_reporting }}\ndisplay_errors = {{ php_display_errors }}\ndisplay_startup_errors = {{ php_display_startup_errors }}\nmax_execution_time = {{ php_max_execution_time }}\nmax_input_time = {{ php_max_input_time }}\nmax_input_vars = {{ php_max_input_vars }}\nmemory_limit = {{ php_memory_limit }}\npost_max_size = {{ php_post_max_size }}\nsendmail_path = {{ php_sendmail_path }}\nsession.save_path = {{ php_session_save_path }}\ntrack_errors = {{ php_track_errors }}\nupload_max_filesize = {{ php_upload_max_filesize }}\nexpose_php = Off\ndate.timezone = {{ php_default_timezone }}\n\n[mysqlnd]\nmysqlnd.collect_memory_statistics = {{ php_mysqlnd_collect_memory_statistics }}\n\n[opcache]\nopcache.enable = {{ php_opcache_enable }}\nopcache.enable_cli = {{ php_opcache_enable_cli }}\nopcache.memory_consumption = {{ php_opcache_memory_consumption }}\nopcache.interned_strings_buffer = {{ php_opcache_interned_strings_buffer }}\nopcache.max_accelerated_files = {{ php_opcache_max_accelerated_files }}\nopcache.revalidate_freq = {{ php_opcache_revalidate_freq }}\nopcache.fast_shutdown = {{ php_opcache_fast_shutdown }}\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "8ddd1003d91a5a476930e7e907f80ca278369e5c", "filename": "roles/sshd/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: ensure ssh server is installed\n  apt:\n    pkg: openssh-server\n    state: latest\n    update_cache: true\n    cache_valid_time: \"{{ apt_cache_valid_time }}\"\n  notify:\n    - restart ssh\n\n- name: ensure sshd is configured\n  template:\n    src: sshd_config.j2\n    dest: /etc/ssh/sshd_config\n  notify:\n    - restart ssh\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "d675d4d509b880f5150d5ce49a7d1e5ff578d908", "filename": "roles/fail2ban/handlers/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: restart fail2ban\n  service: name=fail2ban state=restarted"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "a42e9e0ffe81f211f74423073f3c83e441695541", "filename": "roles/common/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Validate Ansible version\n  assert:\n    that:\n     - \"{{ ansible_version is defined }}\"\n     - \"{{ ansible_version.full | version_compare(minimum_ansible_version, '>=') }}\"\n    msg: \"Your Ansible version is too old. Trellis requires at least {{ minimum_ansible_version }}. Your version is {{ ansible_version.full | default('< 1.6') }}\"\n  run_once: true\n\n- name: Update Apt\n  apt:\n    update_cache: yes\n\n- name: Checking essentials\n  apt:\n    name: \"{{ item }}\"\n    state: present\n  with_items:\n  - python-software-properties\n  - python-pycurl\n  - build-essential\n  - python-mysqldb\n  - curl\n  - git-core\n  - dbus\n\n- name: Validate timezone variable\n  stat:\n    path: /usr/share/zoneinfo/{{ default_timezone }}\n  register: timezone_path\n  changed_when: false\n\n- name: Explain timezone error\n  fail:\n    msg: \"{{ default_timezone }} is not a valid timezone. For a list of valid timezones, check https://php.net/manual/en/timezones.php\"\n  when: not timezone_path.stat.exists\n\n- name: Get current timezone\n  command: cat /etc/timezone\n  register: current_timezone\n  changed_when: false\n\n- name: Set timezone\n  command: timedatectl set-timezone {{ default_timezone }}\n  when: current_timezone.stdout != default_timezone\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "1d5b833f03874ccf7dc344e91addbaad385e6145", "filename": "roles/deploy/tasks/initialize.yml", "repository": "roots/trellis", "decoded_content": "---\n- include: \"{{ deploy_initialize_before | default('../hooks/example.yml') }}\"\n  tags: deploy-initialize-before\n\n- name: Initialize\n  deploy_helper:\n    path: \"{{ project_root }}\"\n    state: present\n\n- include: \"{{ deploy_initialize_after | default('../hooks/example.yml') }}\"\n  tags: deploy-initialize-after\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "63db5b5cbcc936341624c66a5f7f221673962718", "filename": "roles/wordpress-setup/tasks/database.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Create database of sites\n  mysql_db:\n    name: \"{{ site_env.db_name }}\"\n    state: present\n    login_host: \"{{ site_env.db_host }}\"\n    login_user: \"{{ mysql_root_user }}\"\n    login_password: \"{{ mysql_root_password }}\"\n  with_dict: \"{{ wordpress_sites }}\"\n  when: site_uses_local_db and item.value.db_create | default(True)\n\n- name: Create/assign database user to db and grant permissions\n  mysql_user:\n    name: \"{{ site_env.db_user }}\"\n    password: \"{{ site_env.db_password }}\"\n    append_privs: yes\n    priv: \"{{ site_env.db_name }}.*:ALL\"\n    state: present\n    login_host: \"{{ site_env.db_host }}\"\n    login_user: \"{{ mysql_root_user }}\"\n    login_password: \"{{ mysql_root_password }}\"\n  with_dict: \"{{ wordpress_sites }}\"\n  when: site_uses_local_db and item.value.db_create | default(True)\n\n- name: Copy database dump\n  copy:\n    src: \"{{ item.value.db_import }}\"\n    dest: /tmp\n  with_dict: \"{{ wordpress_sites }}\"\n  when: item.value.db_import | default(False)\n\n- name: Import database\n  mysql_db:\n    name: \"{{ site_env.db_name }}\"\n    state: import\n    target: \"/tmp/{{ item.value.db_import | basename }}\"\n    login_host: \"{{ site_env.db_host }}\"\n    login_user: \"{{ site_env.db_user }}\"\n    login_password: \"{{ site_env.db_password }}\"\n  with_dict: \"{{ wordpress_sites }}\"\n  when: item.value.db_import | default(False)\n  notify: reload nginx\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "3f09e68f137afe4fab5d79ea6166e3c17bce20c9", "filename": "tasks/install-docker.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Set docker-ce package state to latest\n  set_fact:\n    docker_pkg_state: 'latest'\n  when: docker_latest_version|bool\n\n- name: Ensure docker-ce is installed\n  package:\n    name: \"{{ docker_pkg_name }}\"\n    state: \"{{ docker_pkg_state|default('present') }}\"\n  become: true\n  notify: restart docker\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "3974dedaf4060386150be9c6844ad76f46abfafa", "filename": "roles/deploy/defaults/main.yml", "repository": "roots/trellis", "decoded_content": "# If you use the \"git\" strategy:\n# - you must set a repository (no default)\nproject_git_repo: \"{{ project.repo }}\"\n# - you can set the git ref to deploy (can be a branch, tag or commit hash)\nproject_version: \"{{ project.branch | default('master') }}\"\n\n# The source_path is used to fetch the tags from git, or synchronise via rsync. This way\n# you do not have to download/sync the entire project on every deploy\nproject_source_path: \"{{ project_root }}/shared/source\"\n\n# There are certain folders you'll want to copy from release to release to speed up deploys.\n# Examples: Composer's `vendor` folder, npm's `node_modules`.\n# These should not be part of project_shared_children since dependencies need to be atomic and tied to a deploy.\nproject_copy_folders:\n  - vendor\n\n# All the templates to process on the remote system on deploy. These could contain config files.\n# `src` and `dest` paths work the same as project_local_files.\nproject_templates:\n  - name: .env config\n    src: roles/deploy/templates/env.j2\n    dest: .env\n\n# The shared_children is a list of all files/folders in your project that need to be linked to a path in \"/shared\".\n# For example a sessions directory or an uploads folder. They are created if they don't exist, with the type\n# specified in the `type` key (file or directory).\n# Example:\n# project_shared_children:\n#   - path: \"app/sessions\"\n#     src: \"sessions\"\n#     mode: \"0755\"\n#     type: \"file\" / \"directory\"  // <- optional, defaults to \"directory\"\nproject_shared_children:\n  - path: web/app/uploads\n    src: uploads\n\n# The project_environment is a list of environment variables that can be used in hooks\n# Example:\n# project_environment:\n#   WP_ENV: \"production\"\nproject_environment:\n  WP_ENV: \"{{ env }}\"\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b810d7201ee61553d868578425ac38d24ffd45ad", "filename": "roles/fail2ban/README.md", "repository": "roots/trellis", "decoded_content": "## What is ansible-fail2ban?\n\nIt is an [ansible](http://www.ansible.com/home) role to install and configure fail2ban.\n\n### What problem does it solve and why is it useful?\n\nSecurity is important and fail2ban is an excellent tool to harden your server with minimal or even no configuration.\n\n## Role variables\n\nBelow is a list of default values along with a description of what they do.\n\n```\n# Which log level should it be output as?\n# 1 = ERROR, 2 = WARN, 3 = INFO, 4 = DEBUG\nfail2ban_loglevel: 3\n\n# Where should log outputs be sent to?\n# SYSLOG, STDERR, STDOUT, file\nfail2ban_logtarget: /var/log/fail2ban.log\n\n# Where should the socket be created?\nfail2ban_socket: /var/run/fail2ban/fail2ban.sock\n\n# Which IP address, CIDR mark or DNS host should be ignored?\nfail2ban_ignoreip: 127.0.0.1/8\n\n# How long in seconds should the ban last for?\nfail2ban_bantime: 600\n\n# How many times can they try before getting banned?\nfail2ban_maxretry: 6\n\n# How should the file changes be detected?\n# gamin, polling, auto\nfail2ban_backend: polling\n\n# Where should e-mail reports be sent to?\nfail2ban_destemail: root@localhost\n\n# How should the ban be applied?\n# iptables, iptables-new, iptables-multiport, shorewall, etc.\nfail2ban_banaction: iptables-multiport\n\n# What e-mail action should be used?\n# sendmail or mail\nfail2ban_mta: sendmail\n\n# What should the default protocol be?\nfail2ban_protocol: tcp\n\n# Which chain would the JUMPs be added into iptables-*?\nfail2ban_chain: INPUT\n\n# What should the default ban action be?\n# action_, action_mw, action_mwl\nfail2ban_action: action_\n\n# What services should fail2ban monitor?\n# You can define fail2ban_services as an empty string to not monitor anything.\n# You can define multiple services as a standard yaml list.\nfail2ban_services:\n    # The name of the service\n    # REQUIRED.\n  - name: ssh\n\n    # Is it enabled?\n    # OPTIONAL: Defaults to \"true\" (must be a string).\n    enabled: \"true\"\n\n    # What port does the service use?\n    # Separate multiple ports with a comma, no spaces.\n    # REQUIRED.\n    port: ssh\n\n    # What protocol does the service use?\n    # OPTIONAL: Defaults to the protocol listed above.\n    protocol: tcp\n\n    # What filter should it use?\n    # REQUIRED.\n    filter: sshd\n\n    # Which log path should it monitor?\n    # REQUIRED.\n    logpath: /var/log/auth.log\n\n    # How many times can they try before getting banned?\n    # OPTIONAL: Defaults to the maxretry listed above.\n    maxretry: 6\n\n    # What should the default ban action be?\n    # OPTIONAL: Defaults to the action listed above.\n    action: action_\n\n    # How should the ban be applied?\n    # OPTIONAL: Defaults to the banaction listed above.\n    banaction: iptables-multiport\n```\n\n## Example playbook\n\nLet's say you want to edit a few values, you can do this by opening `group_vars/all` and then add the following:\n\n```\nfail2ban_services:\n  - name: ssh\n    port: ssh\n    filter: sshd\n    logpath: /var/log/auth.log\n  - name: postfix\n    port: smtp,ssmtp\n    filter: postfix\n    logpath: /var/log/mail.log\n```\n\n## Attribution\n\nMany thanks to [nickjj](https://github.com/nickjj/) for creating the [original version](https://github.com/nickjj/ansible-fail2ban/) of this role.\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "564cdf848834dd9686f4dcf5dab723659c935d7b", "filename": "roles/letsencrypt/tasks/nginx.yml", "repository": "roots/trellis", "decoded_content": "- name: Check for existing Nginx conf per site\n  stat:\n    path: \"{{ nginx_path }}/sites-enabled/{{ item.key }}.conf\"\n  register: nginx_confs\n  when: site_uses_letsencrypt\n  with_dict: \"{{ wordpress_sites }}\"\n\n- name: Create Nginx conf for challenges location\n  template:\n    src: acme-challenge-location.conf.j2\n    dest: \"{{ nginx_path }}/acme-challenge-location.conf\"\n  when: sites_need_confs\n\n- name: Create needed Nginx confs for challenges\n  template:\n    src: nginx-challenge-site.conf.j2\n    dest: \"{{ nginx_path }}/sites-available/letsencrypt-{{ item.item.key }}.conf\"\n  when: not item | skipped and not item.stat.exists\n  with_items: \"{{ nginx_confs.results }}\"\n\n- name: Enable Nginx sites\n  file:\n    src: \"{{ nginx_path }}/sites-available/letsencrypt-{{ item.item.key }}.conf\"\n    dest: \"{{ nginx_path }}/sites-enabled/letsencrypt-{{ item.item.key }}.conf\"\n    state: link\n  when: not item | skipped and not item.stat.exists\n  with_items: \"{{ nginx_confs.results }}\"\n\n- include: \"{{ playbook_dir }}/roles/common/tasks/reload_nginx.yml\"\n  when: sites_need_confs\n\n- name: Create test Acme Challenge file\n  shell: touch {{ acme_tiny_challenges_directory }}/ping.txt\n  args:\n    creates: \"{{ acme_tiny_challenges_directory }}/ping.txt\"\n    warn: false\n\n- name: Test Acme Challenges\n  test_challenges:\n    hosts: \"{{ item.value.site_hosts | reverse_www(enabled=item.value.www_redirect | default(true)) }}\"\n  register: letsencrypt_test_challenges\n  ignore_errors: true\n  when: site_uses_letsencrypt\n  with_dict: \"{{ wordpress_sites }}\"\n\n- name: Notify of challenge failures\n  fail:\n    msg: >\n      Could not access the challenge file for the hosts/domains: {{ item.failed_hosts | join(', ') }}.\n      Let's Encrypt requires every domain/host be publicly accessible.\n      Make sure that a valid DNS record exists for {{ item.failed_hosts | join(', ') }} and that they point to this server's IP.\n      If you don't want these domains in your SSL certificate, then remove them from `site_hosts`.\n      See https://roots.io/trellis/docs/ssl for more details.\n  when: not item | skipped and letsencrypt_test_challenges | failed\n  with_items: \"{{ letsencrypt_test_challenges.results }}\"\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "ed15037478a58b63e3a6f7e6192a68002ef2e253", "filename": "tasks/ssl_config.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Copy PVE SSL certificate chain and key to /etc/ssl\n  copy:\n    content: \"{{ item.content }}\"\n    dest: \"{{ item.dest }}\"\n  with_items:\n    - { dest: \"/etc/ssl/pveproxy-ssl.key\", content: \"{{ pve_ssl_private_key }}\" }\n    - { dest: \"/etc/ssl/pveproxy-ssl.pem\", content: \"{{ pve_ssl_certificate }}\" }\n\n- name: Install PVE SSL certificate chain and key\n  shell: \"diff {{ item.src }} {{ item.dest }} >/dev/null 2>&1 || (cp {{ item.src }} {{ item.dest }}; echo changed)\"\n  register: __pve_ssl_diff\n  changed_when: \"'changed' in __pve_ssl_diff.stdout\"\n  with_items:\n    - { src: \"/etc/ssl/pveproxy-ssl.key\", dest: \"/etc/pve/local/pveproxy-ssl.key\"}\n    - { src: \"/etc/ssl/pveproxy-ssl.pem\", dest: \"/etc/pve/local/pveproxy-ssl.pem\"}\n  notify:\n    - restart pveproxy\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "6aaa0ac51584595d6d188240ead8b01747fcb99e", "filename": "roles/ferm/templates/etc/default/ferm.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n# manual customization of this file is not recommended\n\nFAST=no\nCACHE=no\nOPTIONS=\nENABLED=\"{% if ferm_enabled %}yes{% else %}no{% endif %}\""}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "4021a1e3bc543caee9562fbc5195f01ca9741632", "filename": "roles/wp-cli/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Install WP-CLI\n  get_url:\n    url: \"{{ wp_cli_phar_url }}\"\n    dest: \"{{ wp_cli_bin_path }}\"\n    mode: 0755\n\n- name: Install WP-CLI tab completions\n  get_url:\n    url: \"{{ wp_cli_completion_url }}\"\n    dest: \"{{ wp_cli_completion_path }}\"\n    mode: 0644\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "d7ce910da692f2a7f288196d2ee10d317d0b9147", "filename": "tasks/fetch/s3.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download artifact from s3\n  aws_s3:\n    bucket: '{{ transport_s3_bucket }}'\n    object: '{{ transport_s3_path }}'\n    dest: '{{ download_path }}/{{ transport_s3_path | basename }}'\n    aws_access_key: '{{ transport_s3_aws_access_key }}'\n    aws_secret_key: '{{ transport_s3_aws_secret_key }}'\n    mode: get\n    overwrite: different\n    ignore_nonexistent_bucket: True\n  retries: 5\n  delay: 2\n\n- name: Set downloaded artifact vars\n  set_fact:\n    java_artifact: '{{ download_path }}/{{ transport_s3_path|basename }}'\n    java_artifact_basename: '{{ transport_s3_path|basename }}'\n\n- name: Split artifact name\n  set_fact:\n    parts: >-\n      {{ java_artifact_basename |\n      regex_findall('^(.*j[dkre]{2})-([0-9]+)[u.]([0-9.]+)[-_]([a-z]+)-(x64|i586)') |\n      first | list }}\n\n- name: Set variables based on split\n  set_fact:\n    java_package: '{{ parts[0][-3:] }}'\n    java_major_version: '{{ parts[1] }}'\n    java_minor_version: '{{ parts[2] }}'\n    java_os: '{{ parts[3] }}'\n    java_arch: '{{ parts[4] }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "49b0886bbd40391639c51424ca226f5966e37936", "filename": "roles/letsencrypt/tasks/setup.yml", "repository": "roots/trellis", "decoded_content": "- name: Create directories and set permissions\n  file:\n    mode: \"{{ item.mode | default(omit) }}\"\n    path: \"{{ item.path }}\"\n    state: directory\n  with_items:\n    - path: \"{{ acme_tiny_data_directory }}\"\n      mode: '0700'\n    - path: \"{{ acme_tiny_data_directory }}/csrs\"\n    - path: \"{{ acme_tiny_software_directory }}\"\n    - path: \"{{ acme_tiny_challenges_directory }}\"\n    - path: \"{{ letsencrypt_certs_dir }}\"\n      mode: '0700'\n\n- name: Clone acme-tiny repository\n  git:\n    dest: \"{{ acme_tiny_software_directory }}\"\n    repo: \"{{ acme_tiny_repo }}\"\n    version: \"{{ acme_tiny_commit }}\"\n    accept_hostkey: yes\n\n- name: Copy Lets Encrypt account key source file\n  copy:\n    src: \"{{ letsencrypt_account_key_source_file }}\"\n    dest: \"{{ letsencrypt_account_key }}\"\n  when: letsencrypt_account_key_source_file is defined\n\n- name: Copy Lets Encrypt account key source contents\n  copy:\n    content: \"{{ letsencrypt_account_key_source_content | trim }}\"\n    dest: \"{{ letsencrypt_account_key }}\"\n  when: letsencrypt_account_key_source_content is defined\n\n- name: Generate a new account key\n  shell: openssl genrsa 4096 > {{ letsencrypt_account_key }}\n  args:\n    creates: \"{{ letsencrypt_account_key }}\"\n  register: generate_account_key\n  when: letsencrypt_account_key_source_content is not defined and letsencrypt_account_key_source_file is not defined\n\n- name: Generate certificate renewal script\n  template:\n    src: renew-certs.py\n    dest: \"{{ acme_tiny_data_directory }}/renew-certs.py\"\n    mode: 0700\n\n- name: Download intermediate certificate\n  get_url:\n    url: \"{{ letsencrypt_intermediate_cert_url }}\"\n    dest: \"{{ letsencrypt_intermediate_cert_path }}\"\n    sha256sum: \"{{ letsencrypt_intermediate_cert_sha256sum }}\"\n"}, {"commit_sha": "0afc625b515526d3de2b801a4de8884f7f0c3674", "sha": "2181804380c0c8acca456dbf339c954ec2af235a", "filename": "tasks/pve_cluster_config.yml", "repository": "lae/ansible-role-proxmox", "decoded_content": "---\n- name: Lookup cluster information\n  proxmox_query:\n    query: cluster/status\n  register: __pve_cluster\n\n- name: Identify if the host is already part of a cluster\n  set_fact:\n    __pve_active_cluster: '{{ __pve_cluster | json_query(query) }}'\n  when: \"__pve_cluster | json_query(query) | ternary(true, false)\"\n  vars:\n    query: \"response[?type=='cluster'].name | [0]\"\n\n- name: Identify all clusters that the hosts in the specified group may be in\n  set_fact:\n    __pve_found_clusters: \"{{ __pve_found_clusters | default([]) | intersect([hostvars[item]['__pve_active_cluster']]) }}\"\n  with_items: \"{{ groups[pve_group] }}\"\n  when: \"'__pve_active_cluster' in hostvars[item]\"\n\n- name: Ensure that hosts found are not in multiple existing clusters\n  assert:\n    that:\n      - \"(__pve_found_clusters | default([]) | length) <= 1\"\n    msg: \"Some or all of the hosts in {{ pve_group }} appear to already be part of two or more different clusters, please ensure groups only have hosts meant to be in one single cluster.\"\n\n- name: Ensure that, if we find an existing cluster, that it matches the specified cluster name\n  assert:\n    that:\n      - \"__pve_found_clusters[0] == pve_cluster_clustername\"\n    msg: \"Some or all of the hosts in group '{{ pve_group }}' appear to be in a cluster named '{{ __pve_found_clusters[0] }}', which differs from the specified clustername of '{{ pve_cluster_clustername }}'. Please ensure the clustername is correct. An existing cluster's name cannot be modified.\"\n  when: \"(__pve_found_clusters | default([]) | length) == 1\"\n\n- name: Initialize a Proxmox cluster\n  command: \"pvecm create {{ pve_cluster_clustername }} -bindnet0_addr {{ pve_cluster_bindnet0_addr }} -ring0_addr {{ pve_cluster_ring0_addr }}{% if pve_cluster_bindnet1_addr is defined and pve_cluster_ring1_addr is defined %} -bindnet1_addr {{ pve_cluster_bindnet1_addr }} -ring1_addr {{ pve_cluster_ring1_addr }}{% endif %}\"\n  args:\n    creates: \"{{ pve_cluster_conf }}\"\n  when:\n    - \"__pve_found_clusters is not defined\"\n    - \"inventory_hostname == groups[pve_group][0]\"\n\n- name: Wait for quorum on initialization node\n  proxmox_query:\n    query: cluster/status\n  register: __pve_cluster_init\n  until: \"(__pve_cluster_init | json_query(query)) == 1\"\n  retries: 5\n  delay: 5\n  when:\n    - \"inventory_hostname == groups[pve_group][0]\"\n  vars:\n    query: \"response[?type=='cluster'].quorate | [0]\"\n\n- include_tasks: pve_add_node.yml\n  with_items: \"{{ groups[pve_group][1:] }}\"\n  when:\n    - \"__pve_active_cluster is not defined\"\n    - \"inventory_hostname != groups[pve_group][0]\"\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "fa7330423c85b79574db51aea93cfbd7d7ffad1e", "filename": "tasks/security_policy_apply/Win32NT.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Unzip patch file\n  win_unzip:\n    src: '{{ security_policy_java_artifact }}'\n    dest: '{{ java_act_path }}\\jre\\lib\\security\\'\n    creates: '{{ java_act_path }}\\jre\\lib\\security\\{{ security_patch_folders[java_major_version|int] }}'\n\n- name: Apply patch file\n  win_copy:\n    src: '{{ java_act_path }}\\jre\\lib\\security\\{{ security_patch_folders[java_major_version|int] }}\\{{ policy_item }}'\n    dest: '{{ java_act_path }}\\jre\\lib\\security\\'\n    remote_src: True\n  loop:\n    - local_policy.jar\n    - US_export_policy.jar\n  loop_control:\n    loop_var: policy_item\n\n- name: 'Apply setting'\n  win_lineinfile:\n    path: '{{ java_act_path }}\\jre\\lib\\security\\java.security'\n    line: 'crypto.policy=unlimited'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "8c075cc5a80195223949d75ed0d0cdea5fea361e", "filename": "roles/letsencrypt/library/test_challenges.py", "repository": "roots/trellis", "decoded_content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport socket\nfrom httplib import HTTPConnection, HTTPException\n\nDOCUMENTATION = '''\n---\nmodule: test_challenges\nshort_description: Tests Let's Encrypt web server challenges\ndescription:\n     - The M(test_challenges) module verifies a list of hosts can access acme challenges for Let's Encrypt.\noptions:\n  hosts:\n    description:\n      - A list of hostnames/domains to test.\n    required: true\n    default: null\n    type: list\n  file:\n    description:\n      - The dummy filename in the URL to test.\n    required: no\n    default: ping.txt\n  path:\n    description:\n      - The path to the challenges in the URL.\n    required: no\n    default: /.well-known/acme-challenge\nauthor:\n    - Scott Walkinshaw\n'''\n\nEXAMPLES = '''\n# Example from Ansible Playbooks.\n- test_challenges:\n    hosts:\n      - example.com\n      - www.example.com\n      - www.mydomain.com\n'''\n\ndef get_status(host, path, file):\n    try:\n        conn = HTTPConnection(host)\n        conn.request('HEAD', '/{0}/{1}'.format(path, file))\n        res = conn.getresponse()\n    except (HTTPException, socket.timeout, socket.error):\n        return 0\n    else:\n        return res.status\n\ndef main():\n    module = AnsibleModule(\n        argument_spec = dict(\n            file  = dict(default='ping.txt'),\n            hosts = dict(required=True, type='list'),\n            path  = dict(default='.well-known/acme-challenge')\n        )\n    )\n\n    hosts = module.params['hosts']\n    path = module.params['path']\n    file = module.params['file']\n\n    failed_hosts = []\n\n    for host in hosts:\n        status = get_status(host, path, file)\n        if int(status) != 200:\n            failed_hosts.append(host)\n\n    rc = int(len(failed_hosts) > 0)\n\n    module.exit_json(\n        changed=False,\n        rc=rc,\n        failed_hosts=failed_hosts\n    )\n\nfrom ansible.module_utils.basic import *\nmain()\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "e7a5251aaa515b02c8fe5f632e437ef3c8be81f7", "filename": "roles/ssmtp/templates/ssmtp.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\nroot={{ mail_admin }}\nAuthMethod={{ ssmtp_auth_method }}\nFromLineOverride={{ ssmtp_from_override }}\nUseTLS={{ ssmtp_tls }}\nUseSTARTTLS={{ ssmtp_start_tls }}\nhostname={{ mail_hostname }}\nmailhub={{ mail_smtp_server }}\nAuthUser={{ mail_user }}\nAuthPass={{ mail_password }}\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "06a01b61fb2813208755f3e9447ee112234b2d8e", "filename": "roles/letsencrypt/templates/renew-certs.py", "repository": "roots/trellis", "decoded_content": "#!/usr/bin/env python\n\nimport os\nimport sys\nimport time\n\nfrom subprocess import CalledProcessError, check_output, STDOUT\n\ncerts_dir = '{{ letsencrypt_certs_dir }}'\nfailed = False\nsites = {{ wordpress_sites }}\nsites = (k for k, v in sites.items() if 'ssl' in v and v['ssl'].get('enabled', False) and v['ssl'].get('provider', 'manual') == 'letsencrypt')\n\nfor site in sites:\n    cert_path = os.path.join(certs_dir, site + '.cert')\n    bundled_cert_path = os.path.join(certs_dir, site + '-bundled.cert')\n\n    if os.access(cert_path, os.F_OK):\n        stat = os.stat(cert_path)\n        print 'Certificate file ' + cert_path + ' already exists'\n\n        if time.time() - stat.st_mtime < {{ letsencrypt_min_renewal_age }} * 86400:\n            print '  The certificate is younger than {{ letsencrypt_min_renewal_age }} days. Not creating a new certificate.\\n'\n            continue\n\n    print 'Generating certificate for ' + site\n\n    cmd = ('/usr/bin/env python {{ acme_tiny_software_directory }}/acme_tiny.py '\n           '--ca {{ letsencrypt_ca }} '\n           '--account-key {{ letsencrypt_account_key }} '\n           '--csr {{ acme_tiny_data_directory }}/csrs/{0}.csr '\n           '--acme-dir {{ acme_tiny_challenges_directory }}'\n           ).format(site)\n\n    try:\n        cert = check_output(cmd, stderr=STDOUT, shell=True)\n    except CalledProcessError as e:\n        failed = True\n        print 'Error while generating certificate for ' + site\n        print e.output\n    else:\n        with open(cert_path, 'w') as cert_file:\n            cert_file.write(cert)\n\n        with open('{{ letsencrypt_intermediate_cert_path }}') as intermediate_cert_file:\n            intermediate_cert = intermediate_cert_file.read()\n\n        with open(bundled_cert_path, 'w') as bundled_file:\n            bundled_file.write(''.join([cert, intermediate_cert]))\n\n        print 'Created certificate for ' + site\n\nif failed:\n    sys.exit(1)\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "52bf79b679ba303a3648dbc5af84c2f901566ee2", "filename": "roles/fail2ban/templates/jail.local.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n[DEFAULT]\n\nignoreip = {{ fail2ban_ignoreip }}\nbantime  = {{ fail2ban_bantime }}\nmaxretry = {{ fail2ban_maxretry }}\n\nbackend = {{fail2ban_backend}}\n\ndestemail = {{ fail2ban_destemail }}\nbanaction = {{ fail2ban_banaction }}\nmta = {{ fail2ban_mta }}\nprotocol = {{ fail2ban_protocol }}\nchain = {{ fail2ban_chain }}\n\naction_ = %(banaction)s[name=%(__name__)s, port=\"%(port)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]\n\naction_mw = %(banaction)s[name=%(__name__)s, port=\"%(port)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]\n              %(mta)s-whois[name=%(__name__)s, dest=\"%(destemail)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]\n\naction_mwl = %(banaction)s[name=%(__name__)s, port=\"%(port)s\", protocol=\"%(protocol)s\", chain=\"%(chain)s\"]\n               %(mta)s-whois-lines[name=%(__name__)s, dest=\"%(destemail)s\", logpath=%(logpath)s, chain=\"%(chain)s\"]\n\naction = %({{ fail2ban_action }})s\n\n{% if fail2ban_services is iterable %}\n{% for service in fail2ban_services %}\n[{{ service.name }}]\n\nenabled = {{ service.enabled | default(\"true\") }}\nport = {{ service.port }}\nfilter = {{ service.filter }}\nlogpath = {{ service.logpath }}\n{% if service.maxretry is defined %}\nmaxretry = {{ service.maxretry }}\n{% endif %}\n{% if service.protocol is defined %}\nprotocol = {{ service.protocol }}\n{% endif %}\n{% if service.action is defined %}\naction = %({{ service.action }})s\n{% endif %}\n{% if service.banaction is defined %}\nbanaction = {{ service.banaction }}\n{% endif %}\n\n{% endfor %}\n{% endif %}\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "84b5f1f1ade0c1559a3fe6d5af8156bc2b4f757a", "filename": "tasks/fetch/security-fetch-s3.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Download security policy artifact from s3\n  aws_s3:\n    bucket: '{{ java_unlimited_policy_transport_s3_bucket }}'\n    object: '{{ java_unlimited_policy_transport_s3_path }}'\n    dest: \"{{ download_path }}/\\\n      {{ java_unlimited_policy_transport_s3_path|basename }}\"\n    aws_access_key: '{{ transport_s3_aws_access_key }}'\n    aws_secret_key: '{{ transport_s3_aws_secret_key }}'\n    mode: get\n    overwrite: different\n  retries: 5\n  delay: 2\n\n- name: Downloaded security policy artifact\n  set_fact:\n    security_policy_java_artifact: >\n      {{ download_path }}/{{ java_unlimited_policy_transport_s3_path\n                             | basename }}\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "fb5bba9851872a0dc2758594e555a02bbd2a139b", "filename": "roles/rollback/tasks/prior-release.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: Get list position of current symlinked release\n  shell: \"ls releases | grep -n $(basename $(readlink current)) | cut -f1 -d:\"\n  args:\n    chdir: \"{{ project_root }}\"\n  register: current_release_position\n\n- name: Fail if current release is the oldest available release\n  fail:\n    msg: \"Currently symlinked to earliest available release. Cannot rollback. You may manually specify a different release using --extra-vars='release=12345678901234'.\"\n  when: current_release_position.stdout_lines[0] == \"1\"\n\n- name: Collect list of releases\n  command: ls releases\n  args:\n    chdir: \"{{ project_root }}\"\n  register: releases\n\n- name: Create new_release_path variable\n  set_fact:\n    new_release_path: \"{{ project_root }}/releases/{{ releases.stdout_lines[(current_release_position.stdout_lines[0] | int - 2)] }}\"\n"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "56029b92952e53cd199a88b1714463cabe89d32f", "filename": "tasks/win_fetch/security-winfetch-local.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Copy security policy artifact to destination\n  win_copy:\n    src: '{{ java_unlimited_policy_transport_local }}'\n    dest: '{{ download_path }}'\n  register: file_downloaded\n  retries: 5\n  delay: 2\n  until: file_downloaded is succeeded\n\n- name: Downloaded artifact\n  set_fact:\n    security_policy_java_artifact: '{{ file_downloaded.dest }}'\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "ce4c7c8f8d191db29e2d4ac6c54365c8d8cee12b", "filename": "roles/wordpress-setup/templates/wordpress-site.conf.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\nserver {\n  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) -%}\n  listen 443 ssl http2;\n  {% else -%}\n  listen 80;\n  {% endif %}\n\n  server_name  {% for host in item.value.site_hosts %} {{ host }} {% if item.value.multisite.subdomains | default(false) %} *.{{ host }} {% endif %} {% endfor %};\n  access_log   {{ www_root }}/{{ item.key }}/logs/access.log;\n  error_log    {{ www_root }}/{{ item.key }}/logs/error.log;\n\n  root  {{ www_root }}/{{ item.key }}/current/web;\n  index index.php index.htm index.html;\n\n  charset utf-8;\n\n  {% if env == 'development' -%}\n  # See Virtualbox section at http://wiki.nginx.org/Pitfalls\n  sendfile off;\n  {%- endif %}\n\n  {% if item.value.multisite.enabled | default(false) -%}\n    {% if item.value.multisite.subdomains | default(false) -%}\n      rewrite ^/(wp-.*.php)$ /wp/$1 last;\n      rewrite ^/(wp-(content|admin|includes).*) /wp/$1 last;\n    {%- else -%}\n      include wordpress_multisite_subdirectories.conf;\n    {%- endif %}\n  {%- endif %}\n\n  add_header Fastcgi-Cache $upstream_cache_status;\n\n  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) -%}\n    {{ lookup('template', 'https.conf.j2') }}\n  {% endif %}\n\n  {% if item.value.ssl is not defined or not item.value.ssl.enabled | default(false) -%}\n    include acme-challenge-location.conf;\n  {% endif %}\n\n  include includes.d/{{ item.key }}/*.conf;\n  include wordpress.conf;\n\n  location ~ \\.php$ {\n    try_files $uri =404;\n    error_page 404 /index.php;\n\n    {% if item.value.cache is defined and item.value.cache.enabled | default(false) -%}\n      set $skip_cache 0;\n\n      if ($query_string != \"\") {\n        set $skip_cache 1;\n      }\n\n      # Don't cache uris containing the following segments\n      if ($request_uri ~* \"{{ item.value.cache.skip_cache_uri | default(nginx_skip_cache_uri) }}\") {\n        set $skip_cache 1;\n      }\n\n      # Don't use the cache if cookies includes the following\n      if ($http_cookie ~* \"{{ item.value.cache.skip_cache_cookie | default(nginx_skip_cache_cookie) }}\") {\n        set $skip_cache 1;\n      }\n\n      fastcgi_cache wordpress;\n      fastcgi_cache_valid {{ item.value.cache.duration | default(nginx_cache_duration) }};\n      fastcgi_cache_bypass $skip_cache;\n      fastcgi_no_cache $skip_cache;\n    {% endif -%}\n\n    include fastcgi_params;\n    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n    fastcgi_param DOCUMENT_ROOT $realpath_root;\n    fastcgi_pass unix:/var/run/php-fpm-wordpress.sock;\n  }\n}\n\n{% if item.value.ssl is defined and item.value.ssl.enabled | default(false) %}\nserver {\n  listen 80;\n\n  server_name {{ item.value.site_hosts | reverse_www(enabled=item.value.www_redirect | default(true)) | join(' ') }};\n\n  {% if item.value.ssl.provider | default('manual') == 'letsencrypt' -%}\n  include acme-challenge-location.conf;\n\n  location / {\n    return 301 https://$host$request_uri;\n  }\n  {% else %}\n  return 301 https://$host$request_uri;\n  {% endif -%}\n}\n{% endif %}\n\n{% for host in item.value.site_hosts if item.value.www_redirect | default(true) %}\nserver {\n  {% if item.value.ssl is defined and item.value.ssl.enabled | default(false) -%}\n    listen 443 ssl http2;\n\n    {{ lookup('template', 'https.conf.j2') }}\n  {% else -%}\n    listen 80;\n  {% endif -%}\n\n  server_name {{ host | reverse_www(append=false) }};\n\n  {% if item.value.ssl is not defined or not item.value.ssl.enabled | default(false) -%}\n    include acme-challenge-location.conf;\n\n    location / {\n      return 301 $scheme://{{ host }}$request_uri;\n    }\n  {% else %}\n    return 301 $scheme://{{ host }}$request_uri;\n  {% endif %}\n}\n{% endfor %}\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "f8debff7cda55ca535488ffbf62b9ef11146d38f", "filename": "tasks/postinstall.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Reset internal variables for additional packages to be installed\n  set_fact:\n    _docker_additional_packages_os: []\n    _docker_additional_packages_pip: []\n\n- name: Set facts to ensure 'docker_container' module works\n  set_fact:\n    _docker_additional_packages_pip: \"{{ _docker_additional_packages_pip + docker_predefined_packages_pip[_docker_os_dist]['sdk'] }}\"\n  when:\n    - docker_container_deps\n\n- name: Set facts to ensure 'docker_service' module works\n  set_fact:\n    _docker_additional_packages_pip: \"{{ _docker_additional_packages_pip + docker_predefined_packages_pip[_docker_os_dist]['compose'] }}\"\n  when:\n    - docker_service_deps\n\n- name: Set facts to ensure 'docker_stack' module works\n  set_fact:\n    _docker_additional_packages_pip: \"{{ _docker_additional_packages_pip + docker_predefined_packages_pip[_docker_os_dist]['stack'] }}\"\n  when:\n    - docker_stack_deps\n\n- name: Set facts with additional package to be installed\n  set_fact:\n    _docker_additional_packages_pip: \"{{ _docker_additional_packages_pip + docker_additional_packages_pip }}\"\n    _docker_additional_packages_os: \"{{ _docker_additional_packages_os + docker_additional_packages_os }}\"\n\n- name: Set facts to ensure PiP is installed if required\n  set_fact:\n    _docker_additional_packages_os: \"{{ _docker_additional_packages_os + ['python-pip', 'python-virtualenv'] }}\"\n  when:\n    - _docker_additional_packages_pip | length > 0\n\n- name: Install additional packages (OS package manager)\n  become: true\n  package:\n    name: \"{{ item }}\"\n    state: present\n  with_items:\n    - \"{{ _docker_additional_packages_os }}\"\n  when: _docker_additional_packages_os | length > 0\n\n- name: Upgrade PiP\n  become: true\n  pip:\n    name: pip\n    state: forcereinstall\n  when: docker_pip_upgrade\n\n- name: Install additional packages (PiP)\n  become: true\n  pip:\n    name: \"{{ item }}\"\n    state: present\n  with_items:\n    - \"{{ _docker_additional_packages_pip }}\"\n  when: _docker_additional_packages_pip | length > 0\n  environment:\n    PYTHONWARNINGS: ignore"}, {"commit_sha": "003ef19731dd9631e9959ce422ea9e4a6c5becd7", "sha": "3bd8d4cb39381fdab80a623022e39bebb3443cbc", "filename": "tasks/Windows/chocolatey.yml", "repository": "lean-delivery/ansible-role-java", "decoded_content": "---\n- name: Check choco\n  win_chocolatey:\n    name: chocolatey\n    state: present\n\n# Workaround for new chocolatey output.\n# See https://github.com/ansible/ansible/issues/53860#issuecomment-473431360 for more details\n- name: disable enhanced exit codes\n  win_chocolatey_feature:\n    name: useEnhancedExitCodes\n    state: disabled\n\n- name: 'Install {{ choco_java_package }} from chocolatey'\n  win_chocolatey:\n    name: '{{ choco_java_package }}'\n  register: choco_install\n  retries: 15\n  delay: 5\n  until: choco_install is succeeded\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "97d3228920d9814c67a2562b195ff0a12c81c95a", "filename": "roles/sshd/README.md", "repository": "roots/trellis", "decoded_content": "## What is ansible-sshd?\n\nIt is an [ansible](http://www.ansible.com/home) role to install openssh-server and configure it.\n\n### What problem does it solve and why is it useful?\n\nOften times you want to disable root logins and password based logins. This role sets those options by default but it also exposes every config value found in the default ubuntu 14.04 `sshd_config` file.\n\n## Role variables\n\nBelow is a list of default values along with a description of what they do.\n\n```\n# To view what these commands do, check out:\n# http://www.openssh.com/cgi-bin/man.cgi?query=sshd_config\n\nsshd_port: 22\nsshd_listen_address: 0.0.0.0\nsshd_protocol: 2\nsshd_host_rsa_key: /etc/ssh/ssh_host_rsa_key\nsshd_host_dsa_key: /etc/ssh/ssh_host_dsa_key\nsshd_host_ecdsa_key: /etc/ssh/ssh_host_ecdsa_key\nsshd_use_privilege_separation: true\nsshd_key_regeneration_interval: 3600\nsshd_server_key_bits: 768\nsshd_syslog_facility: AUTH\nsshd_log_level: INFO\nsshd_login_grace_time: 120\nsshd_permit_root_login: true\nsshd_strict_modes: true\nsshd_rsa_authentication: true\nsshd_pubkey_authentication: true\nsshd_authorized_keys_file: \"%h/.ssh/authorized_keys\"\nsshd_ignore_rhosts: true\nsshd_rhosts_rsa_authentication: false\nsshd_host_based_authentication: false\nsshd_ignore_user_known_hosts: false\nsshd_permit_empty_passwords: false\nsshd_challenge_response_authentication: false\nsshd_password_authentication: false\nsshd_gss_api_authentication: false\nsshd_gss_api_cleanup_credentials: true\nsshd_x11_forwarding: true\nsshd_x11_display_offset: 10\nsshd_print_motd: false\nsshd_print_last_log: true\nsshd_tcp_keep_alive: true\nsshd_max_startups: 10:30:100\nsshd_banner: none\nsshd_accept_env: LANG LC_*\nsshd_subsystem: sftp /usr/lib/openssh/sftp-server\nsshd_use_pam: true\n```\n\n## Attribution\n\nMany thanks to [nickjj](https://github.com/nickjj/) for creating the [original version](https://github.com/nickjj/ansible-sshd/) of this role.\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "617c783fe674816f40141a15b515cb571f2df7a3", "filename": "roles/fail2ban/templates/fail2ban.local.j2", "repository": "roots/trellis", "decoded_content": "# {{ ansible_managed }}\n\n[Definition]\n\nloglevel = {{ fail2ban_loglevel }}\nlogtarget = {{ fail2ban_logtarget }}\nsocket = {{ fail2ban_socket }}\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "b5d691868b56db98bde2048b162af52287cade69", "filename": "roles/ferm/tasks/main.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: ensure ferm status is in debconf\n  debconf:\n    name: ferm\n    question: ferm/enable\n    vtype: boolean\n    value: \"{{ ferm_enabled | lower }}\"\n\n- name: ensure ferm is installed\n  apt:\n    pkg: ferm\n    state: latest\n    update_cache: true\n    cache_valid_time: \"{{ apt_cache_valid_time }}\"\n    install_recommends: no\n  notify:\n    - restart ferm\n\n- name: ensure configuration directories exist\n  file:\n    path: \"{{ item }}\"\n    state: directory\n    mode: 0750\n  with_items:\n    - /etc/ferm/ferm.d\n    - /etc/ferm/filter-input.d\n\n- name: ensure firewall is configured\n  template:\n    src: \"{{ item }}.j2\"\n    dest: /{{ item }}\n  with_items:\n    - etc/default/ferm\n    - etc/ferm/ferm.conf\n  notify:\n    - restart ferm\n\n- name: ensure iptables INPUT rules are removed\n  file: state=absent\n        {% if item.filename is defined and item.filename %}\n        path=/etc/ferm/filter-input.d/{{ item.weight | default('50') }}_{{ item.filename }}.conf\n        {% else %}\n        path=/etc/ferm/filter-input.d/{{ item.weight | default('50') }}_{{ item.type }}_{{ item.dport[0] }}.conf\n        {% endif %}\n  with_flattened:\n    - \"{{ ferm_input_list }}\"\n    - \"{{ ferm_input_group_list }}\"\n    - \"{{ ferm_input_host_list }}\"\n  when: ((item.type is defined and item.type) and (item.dport is defined and item.dport)) and\n        (item.delete is defined and item.delete)\n\n- name: ensure iptables INPUT rules are added\n  template: src=etc/ferm/filter-input.d/{{ item.type }}.conf.j2\n            {% if item.filename is defined and item.filename %}\n            dest=/etc/ferm/filter-input.d/{{ item.weight | default('50') }}_{{ item.filename }}.conf\n            {% else %}\n            dest=/etc/ferm/filter-input.d/{{ item.weight | default('50') }}_{{ item.type }}_{{ item.dport[0] }}.conf\n            {% endif %}\n  with_flattened:\n    - \"{{ ferm_input_list }}\"\n    - \"{{ ferm_input_group_list }}\"\n    - \"{{ ferm_input_host_list }}\"\n  when: (item.type is defined and item.type and item.dport is defined and item.dport) and\n        (item.delete is undefined or (item.delete is defined and not item.delete))\n\n- name: ensure iptables rules are enabled\n  command: ferm --slow /etc/ferm/ferm.conf\n  changed_when: false\n  when: ferm_enabled\n\n- name: ensure iptables rules are disabled\n  command: ferm --flush /etc/ferm/ferm.conf\n  changed_when: false\n  when: not ferm_enabled\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "c8d08f35f8c1e8bd91473e0b78c5325dbde65b82", "filename": "tasks/configure-docker.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- name: Ensure /etc/docker directory exists\n  file:\n    path: /etc/docker\n    state: directory\n    mode: 0755\n  become: true\n\n- name: Configure Docker daemon (file)\n  copy:\n    src: \"{{ docker_daemon_config_file }}\"\n    dest: /etc/docker/daemon.json\n  become: true\n  notify: restart docker\n  when: docker_daemon_config_file is defined\n\n- name: Configure Docker daemon (variables)\n  copy:\n    content: \"{{ docker_daemon_config | to_nice_json }}\"\n    dest: /etc/docker/daemon.json\n  become: true\n  notify: restart docker\n  when: docker_daemon_config_file is not defined and\n        docker_daemon_config is defined\n\n- name: Ensure Docker default user namespace is defined in subuid and subgid\n  lineinfile:\n    path: \"{{ item }}\"\n    regexp: '^dockremap'\n    line: 'dockremap:500000:65536'\n  become: yes\n  with_items:\n    - /etc/subuid\n    - /etc/subgid\n  when: (_docker_os_dist == \"CentOS\" or _docker_os_dist == \"RedHat\") and\n        ((docker_daemon_config is defined and\n        docker_daemon_config['userns-remap'] is defined and\n        docker_daemon_config['userns-remap'] == 'default') or\n        docker_bug_usermod|bool == true)\n\n- name: Ensure thin-provisioning-tools is installed when devicemapper is used (Ubuntu)\n  package:\n    name: thin-provisioning-tools\n    state: present\n  become: yes\n  when: (_docker_os_dist == \"Ubuntu\" or _docker_os_dist == \"Debian\") and\n        docker_daemon_config['storage-driver'] is defined and\n        docker_daemon_config['storage-driver'] == 'devicemapper'\n\n- name: Enable Docker service\n  service:\n    name: docker\n    enabled: yes\n  notify: restart docker\n  register: docker_service\n  become: yes\n\n- name: Trigger start/restart of Docker\n  service:\n    name: docker\n  notify: restart docker\n  changed_when: docker_service.status.SubState != \"running\"\n  when: docker_service.status is defined\n"}, {"commit_sha": "3bc7d96ccc00f6a05d666a3fde220dcf59139f86", "sha": "f8e32d28907f64cf8284fe8e8454173b6d62f316", "filename": "roles/common/tasks/reload_nginx.yml", "repository": "roots/trellis", "decoded_content": "---\n- name: test nginx conf\n  command: nginx -t\n  register: nginx_test\n  changed_when: false\n\n- name: reload nginx\n  service:\n    name: nginx\n    state: reloaded\n  when: nginx_test | success\n  changed_when: false\n"}, {"commit_sha": "2546a8fca283af94be5e80dc6f5141836aca689a", "sha": "b63cf087883540084d0ad8a1775b8e36a457d439", "filename": "tasks/checks.yml", "repository": "haxorof/ansible-role-docker-ce", "decoded_content": "---\n- include_tasks: distribution-checks.yml\n  when:\n    _docker_os_dist_check | bool\n\n- include_tasks: compatibility-checks.yml\n"}]